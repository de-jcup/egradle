<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type language="gradle" name="org.gradle.testing.jacoco.tasks.JacocoReport" version="3.0" superType="org.gradle.testing.jacoco.tasks.JacocoBase" documented="true">
    <description> Task to generate HTML, Xml and CSV reports of Jacoco coverage data.

</description>
    <method name="additionalClassDirs" returnType="void">
        <description> Adds additional class directories to those that will be included in the report.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;dirs one or more directories containing classes to report coverage of

</description>
        <parameter type="java.io.File" name="dirs"/>
    </method>
    <method name="additionalClassDirs" returnType="void">
        <description> Adds additional class directories to those that will be included in the report.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;dirs a &lt;a href='type://FileCollection'&gt;FileCollection&lt;/a&gt; of directories containing classes to report coverage of

</description>
        <parameter type="org.gradle.api.file.FileCollection" name="dirs"/>
    </method>
    <method name="additionalSourceDirs" returnType="void">
        <description> Adds additional source directories to be used for any classes included in the report.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;dirs one or more directories containing source files for the classes included in the report

</description>
        <parameter type="java.io.File" name="dirs"/>
    </method>
    <method name="additionalSourceDirs" returnType="void">
        <description> Adds additional source directories to be used for any classes included in the report.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;dirs a &lt;a href='type://FileCollection'&gt;FileCollection&lt;/a&gt; of directories containing source files for the classes included in the report

</description>
        <parameter type="org.gradle.api.file.FileCollection" name="dirs"/>
    </method>
    <method name="apply" returnType="boolean">
        <parameter type="java.io.File" name="file"/>
    </method>
    <method name="call" returnType="java.io.File"/>
    <method name="execute" returnType="void">
        <parameter type="org.gradle.api.Project" name="project"/>
    </method>
    <method name="execute" returnType="void">
        <parameter type="org.gradle.api.Task" name="task"/>
    </method>
    <method name="executionData" returnType="void" documented="true">
        <description> Adds execution data files to be used during coverage analysis.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;files one or more files to add

</description>
        <parameter type="java.lang.Object" name="files"/>
    </method>
    <method name="executionData" returnType="void" documented="true">
        <description> Adds execution data generated by a task to the list of those used during coverage analysis. Only tasks with a &lt;a href='type://JacocoTaskExtension'&gt;JacocoTaskExtension&lt;/a&gt; will be included; all others will be ignored.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;tasks one or more tasks to add

</description>
        <parameter type="org.gradle.api.Task" name="tasks"/>
    </method>
    <method name="executionData" returnType="void" documented="true">
        <description> Adds execution data generated by the given tasks to the list of those used during coverage analysis. Only tasks with a &lt;a href='type://JacocoTaskExtension'&gt;JacocoTaskExtension&lt;/a&gt; will be included; all others will be ignored.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;tasks one or more tasks to add

</description>
        <parameter type="org.gradle.api.tasks.TaskCollection" name="tasks"/>
    </method>
    <method name="generate" returnType="void"/>
    <method name="getAdditionalClassDirs" returnType="org.gradle.api.file.FileCollection">
        <description> Additional class dirs that coverage data should be reported for.

</description>
    </method>
    <method name="getAdditionalSourceDirs" returnType="org.gradle.api.file.FileCollection">
        <description> Additional source dirs for the classes coverage data is being reported for.

</description>
    </method>
    <method name="getAllClassDirs" returnType="org.gradle.api.file.FileCollection">
        <description> Gets the class directories that coverage will be reported for. All classes in these directories will be included in the report.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;class dirs to report coverage of

</description>
    </method>
    <method name="getAllSourceDirs" returnType="org.gradle.api.file.FileCollection">
        <description> Gets the source directories for the classes that will be reported on. Source will be obtained from these directories only for the classes included in the report.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;source directories for the classes reported on
 (see &lt;a href='type://org.gradle.testing.jacoco.tasks.JacocoReport#getAllClassDirs()'&gt;#getAllClassDirs()&lt;/a&gt;)

</description>
    </method>
    <method name="getClassDirectories" returnType="org.gradle.api.file.FileCollection">
        <description> Source sets that coverage should be reported for.

</description>
    </method>
    <method name="getExecutionData" returnType="org.gradle.api.file.FileCollection">
        <description> Collection of execution data files to analyze.

</description>
    </method>
    <method name="getReports" returnType="org.gradle.testing.jacoco.tasks.JacocoReportsContainer">
        <description> Returns the reports to be generated by this task.

</description>
    </method>
    <method name="getSourceDirectories" returnType="org.gradle.api.file.FileCollection">
        <description> Source sets that coverage should be reported for.

</description>
    </method>
    <method name="isSatisfiedBy" returnType="boolean">
        <parameter type="java.io.File" name="file"/>
    </method>
    <method name="isSatisfiedBy" returnType="boolean">
        <parameter type="org.gradle.api.Task" name="element"/>
    </method>
    <method name="reports" returnType="org.gradle.testing.jacoco.tasks.JacocoReportsContainer" delegationTarget="org.gradle.testing.jacoco.tasks.JacocoReportsContainer">
        <description> Configures the reports to be generated by this task.

</description>
        <parameter type="groovy.lang.Closure" name="closure"/>
    </method>
    <method name="reports" returnType="org.gradle.testing.jacoco.tasks.JacocoReportsContainer">
        <parameter type="org.gradle.api.Action" name="configureAction"/>
    </method>
    <method name="setAdditionalClassDirs" returnType="void">
        <parameter type="org.gradle.api.file.FileCollection" name="additionalClassDirs"/>
    </method>
    <method name="setAdditionalSourceDirs" returnType="void">
        <parameter type="org.gradle.api.file.FileCollection" name="additionalSourceDirs"/>
    </method>
    <method name="setClassDirectories" returnType="void">
        <parameter type="org.gradle.api.file.FileCollection" name="classDirectories"/>
    </method>
    <method name="setExecutionData" returnType="void">
        <parameter type="org.gradle.api.file.FileCollection" name="executionData"/>
    </method>
    <method name="setSourceDirectories" returnType="void">
        <parameter type="org.gradle.api.file.FileCollection" name="sourceDirectories"/>
    </method>
    <method name="sourceSets" returnType="void">
        <description> Adds a source set to the list to be reported on. The output of this source set will be used as classes to include in the report. The source for this source set will be used for any classes
 included in the report.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;sourceSets one or more source sets to report on

</description>
        <parameter type="org.gradle.api.tasks.SourceSet" name="sourceSets"/>
    </method>
    <interface name="org.gradle.api.reporting.Reporting"/>
    <property name="additionalClassDirs" type="org.gradle.api.file.FileCollection" documented="true">
        <description> Additional class dirs that coverage data should be reported for.

</description>
    </property>
    <property name="additionalSourceDirs" type="org.gradle.api.file.FileCollection" documented="true">
        <description> Additional source dirs for the classes coverage data is being reported for.

</description>
    </property>
    <property name="allClassDirs" type="org.gradle.api.file.FileCollection">
        <description> Gets the class directories that coverage will be reported for. All classes in these directories will be included in the report.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;class dirs to report coverage of

</description>
    </property>
    <property name="allSourceDirs" type="org.gradle.api.file.FileCollection">
        <description> Gets the source directories for the classes that will be reported on. Source will be obtained from these directories only for the classes included in the report.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;source directories for the classes reported on
 (see &lt;a href='type://org.gradle.testing.jacoco.tasks.JacocoReport#getAllClassDirs()'&gt;#getAllClassDirs()&lt;/a&gt;)

</description>
    </property>
    <property name="classDirectories" type="org.gradle.api.file.FileCollection" documented="true">
        <description> Source sets that coverage should be reported for.

</description>
    </property>
    <property name="executionData" type="org.gradle.api.file.FileCollection" documented="true">
        <description> Collection of execution data files to analyze.

</description>
    </property>
    <property name="reports" type="org.gradle.testing.jacoco.tasks.JacocoReportsContainer" documented="true">
        <description> Returns the reports to be generated by this task.

</description>
    </property>
    <property name="satisfiedBy" type="boolean"/>
    <property name="sourceDirectories" type="org.gradle.api.file.FileCollection" documented="true">
        <description> Source sets that coverage should be reported for.

</description>
    </property>
</type>
