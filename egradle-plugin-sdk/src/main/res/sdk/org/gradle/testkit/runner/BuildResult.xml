<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.testkit.runner.BuildResult" version="3.0">
    <description>
 * The result of executing a build, via the {@link GradleRunner}.
 *
 * @since 2.6
 * @see GradleRunner#build()
 * @see GradleRunner#buildAndFail()
 </description>
    <method name="getOutput" returnType="java.lang.String">
        <description>
     * The textual output produced during the build.
     * &lt;p&gt;
     * This is equivalent to the console output produced when running a build from the command line.
     * It contains both the standard output, and standard error output, of the build.
     *
     * @return the build output, or an empty string if there was no build output (e.g. ran with {@code -q})
     * @since 2.9
     </description>
    </method>
    <method name="getTasks" returnType="java.util.List">
        <description>
     * The tasks that were part of the build.
     * &lt;p&gt;
     * The order of the tasks corresponds to the order in which the tasks were started.
     * If executing a parallel enabled build, the order is not guaranteed to be deterministic.
     * &lt;p&gt;
     * The returned list is an unmodifiable view of items.
     * The returned list will be empty if no tasks were executed.
     * This can occur if the build fails early, due to a build script failing to compile for example.
     *
     * @return the build tasks
     </description>
    </method>
    <method name="task" returnType="org.gradle.testkit.runner.BuildTask">
        <description>
     * Returns the result object for a particular task, or {@code null} if the given task was not part of the build.
     *
     * @param taskPath the path of the target task
     * @return information about the executed task, or {@code null} if the task was not executed
     </description>
        <parameter type="java.lang.String" name="taskPath"/>
    </method>
    <method name="taskPaths" returnType="java.util.List">
        <description>
     * The paths of the subset of {@link #getTasks()} that had the given outcome.
     * &lt;p&gt;
     * The returned list is an unmodifiable view of items.
     * The returned list will be empty if no tasks were executed with the given outcome.
     *
     * @param outcome the desired outcome
     * @return the paths of the build tasks with the given outcome
     </description>
        <parameter type="org.gradle.testkit.runner.TaskOutcome" name="outcome"/>
    </method>
    <method name="tasks" returnType="java.util.List">
        <description>
     * The subset of {@link #getTasks()} that had the given outcome.
     * &lt;p&gt;
     * The returned list is an unmodifiable view of items.
     * The returned list will be empty if no tasks were executed with the given outcome.
     *
     * @param outcome the desired outcome
     * @return the build tasks with the given outcome
     </description>
        <parameter type="org.gradle.testkit.runner.TaskOutcome" name="outcome"/>
    </method>
    <property name="output" type="java.lang.String">
        <description>
     * The textual output produced during the build.
     * &lt;p&gt;
     * This is equivalent to the console output produced when running a build from the command line.
     * It contains both the standard output, and standard error output, of the build.
     *
     * @return the build output, or an empty string if there was no build output (e.g. ran with {@code -q})
     * @since 2.9
     </description>
    </property>
    <property name="tasks" type="java.util.List">
        <description>
     * The tasks that were part of the build.
     * &lt;p&gt;
     * The order of the tasks corresponds to the order in which the tasks were started.
     * If executing a parallel enabled build, the order is not guaranteed to be deterministic.
     * &lt;p&gt;
     * The returned list is an unmodifiable view of items.
     * The returned list will be empty if no tasks were executed.
     * This can occur if the build fails early, due to a build script failing to compile for example.
     *
     * @return the build tasks
     </description>
    </property>
</type>
