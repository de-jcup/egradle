<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type language="gradle" name="org.gradle.platform.base.binary.BaseBinarySpec" version="3.0" superType="org.gradle.api.internal.AbstractBuildableComponentSpec">
    <description> Base class that may be used for custom &lt;a href='type://BinarySpec'&gt;BinarySpec&lt;/a&gt; implementations. However, it is generally better to use an
 interface annotated with &lt;a href='type://org.gradle.model.Managed'&gt;org.gradle.model.Managed&lt;/a&gt; and not use an implementation class at all.

</description>
    <method name="create" returnType="T">
        <parameter type="java.lang.Class" name="publicType"/>
        <parameter type="java.lang.Class" name="implementationType"/>
        <parameter type="org.gradle.platform.base.internal.ComponentSpecIdentifier" name="componentId"/>
        <parameter type="org.gradle.model.internal.core.MutableModelNode" name="modelNode"/>
        <parameter type="org.gradle.model.internal.core.MutableModelNode" name="componentNode"/>
        <parameter type="org.gradle.internal.reflect.Instantiator" name="instantiator"/>
        <parameter type="org.gradle.api.internal.project.taskfactory.ITaskFactory" name="taskFactory"/>
    </method>
    <method name="execute" returnType="void">
        <parameter type="org.gradle.model.internal.core.MutableModelNode" name="modelNode"/>
    </method>
    <method name="getBuildAbility" returnType="org.gradle.platform.base.internal.BinaryBuildAbility"/>
    <method name="getComponent" returnType="org.gradle.platform.base.ComponentSpec"/>
    <method name="getId" returnType="org.gradle.api.artifacts.component.LibraryBinaryIdentifier"/>
    <method name="getInputs" returnType="org.gradle.api.DomainObjectSet"/>
    <method name="getNamingScheme" returnType="org.gradle.platform.base.internal.BinaryNamingScheme"/>
    <method name="getProjectScopedName" returnType="java.lang.String"/>
    <method name="getPublicType" returnType="java.lang.Class"/>
    <method name="getSources" returnType="org.gradle.model.ModelMap"/>
    <method name="getTasks" returnType="org.gradle.platform.base.BinaryTasksCollection"/>
    <method name="hasCodependentSources" returnType="boolean"/>
    <method name="isBuildable" returnType="boolean"/>
    <method name="isLegacyBinary" returnType="boolean"/>
    <method name="replaceSingleDirectory" returnType="void">
        <parameter type="java.util.Set" name="dirs"/>
        <parameter type="java.io.File" name="dir"/>
    </method>
    <method name="setBuildable" returnType="void">
        <parameter type="boolean" name="buildable"/>
    </method>
    <method name="setNamingScheme" returnType="void">
        <parameter type="org.gradle.platform.base.internal.BinaryNamingScheme" name="namingScheme"/>
    </method>
    <interface name="org.gradle.platform.base.internal.BinarySpecInternal"/>
    <property name="buildAbility" type="org.gradle.platform.base.internal.BinaryBuildAbility"/>
    <property name="buildable" type="boolean"/>
    <property name="component" type="org.gradle.platform.base.ComponentSpec"/>
    <property name="id" type="org.gradle.api.artifacts.component.LibraryBinaryIdentifier"/>
    <property name="inputs" type="org.gradle.api.DomainObjectSet"/>
    <property name="legacyBinary" type="boolean"/>
    <property name="namingScheme" type="org.gradle.platform.base.internal.BinaryNamingScheme"/>
    <property name="projectScopedName" type="java.lang.String"/>
    <property name="publicType" type="java.lang.Class"/>
    <property name="sources" type="org.gradle.model.ModelMap"/>
    <property name="tasks" type="org.gradle.platform.base.BinaryTasksCollection"/>
</type>
