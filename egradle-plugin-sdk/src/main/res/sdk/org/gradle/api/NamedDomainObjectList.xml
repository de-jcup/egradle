<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.NamedDomainObjectList" version="3.0" documented="true">
    <description>
 * &lt;p&gt;A specialisation of {@link org.gradle.api.NamedDomainObjectCollection} that also implements {@link java.util.List}.&lt;/p&gt;
 *
 * &lt;p&gt;All object equality is determined in terms of object names. That is, calling {@code remove()} with an object that is NOT equal to
 * an existing object in terms of {@code equals}, but IS in terms of name equality will result in the existing collection item with
 * the equal name being removed.&lt;/p&gt;
 *
 * @param &lt;T&gt; The type of element in the set
 </description>
    <method name="findAll" returnType="java.util.List">
        <description>
     * {@inheritDoc}
     </description>
        <parameter type="groovy.lang.Closure" name="spec"/>
    </method>
    <method name="matching" returnType="org.gradle.api.NamedDomainObjectList">
        <description>
     * {@inheritDoc}
     </description>
        <parameter type="groovy.lang.Closure" name="spec"/>
    </method>
    <method name="matching" returnType="org.gradle.api.NamedDomainObjectList">
        <description>
     * {@inheritDoc}
     </description>
        <parameter type="org.gradle.api.specs.Spec" name="spec"/>
    </method>
    <method name="withType" returnType="org.gradle.api.NamedDomainObjectList">
        <description>
     * {@inheritDoc}
     </description>
        <parameter type="java.lang.Class" name="type"/>
    </method>
    <interface name="java.util.List"/>
    <interface name="org.gradle.api.NamedDomainObjectCollection"/>
</type>
