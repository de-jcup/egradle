<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.artifacts.result.ResolvedComponentResult" version="3.0">
    <description>
 * Represents a component instance in the resolved dependency graph. Provides some basic identity and dependency information about the component.
 </description>
    <method name="getDependencies" returnType="java.util.Set">
        <description>
     * &lt;p&gt;Returns the dependencies of this component. Includes resolved and unresolved dependencies (if any).
     *
     * &lt;p&gt;The elements of the returned collection are declared as {@link DependencyResult}, however the dependency instances will also implement one of the
     * following instances:&lt;/p&gt;
     *
     * &lt;ul&gt;
     *     &lt;li&gt;{@link ResolvedDependencyResult} for dependencies which were successfully resolved.&lt;/li&gt;
     *     &lt;li&gt;{@link UnresolvedDependencyResult} for dependencies which could not be resolved for some reason.&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @return the dependencies of this component
     </description>
    </method>
    <method name="getDependents" returnType="java.util.Set">
        <description>
     * Returns the incoming dependencies of this component.
     *
     * @return the dependents of this component
     </description>
    </method>
    <method name="getId" returnType="org.gradle.api.artifacts.component.ComponentIdentifier">
        <description>
     * &lt;p&gt;Returns the identifier of this component. This can be used to uniquely identify the component within the current build, but it is not necessarily unique between
     * different builds.
     *
     * &lt;p&gt;The return type is declared as an opaque {@link ComponentIdentifier}, however the identifier may also implement one of the following interfaces:&lt;/p&gt;
     *
     * &lt;ul&gt;
     *     &lt;li&gt;{@link org.gradle.api.artifacts.component.ProjectComponentIdentifier} for those component instances which are produced by the current build.&lt;/li&gt;
     *     &lt;li&gt;{@link org.gradle.api.artifacts.component.ModuleComponentIdentifier} for those component instances which are found in some repository.&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @return the identifier of this component
     </description>
    </method>
    <method name="getModuleVersion" returnType="org.gradle.api.artifacts.ModuleVersionIdentifier">
        <description>
     * Returns the module version which this component belongs to, if any. A component will belong to a module version if it was found in some repository, or if the
     * module version for the component has been declared, usually by declaring how the component should be published.
     *
     * @return the module version of the component, or {@code null} if this component has no associated module version.
     </description>
    </method>
    <method name="getSelectionReason" returnType="org.gradle.api.artifacts.result.ComponentSelectionReason">
        <description>
     * Returns the reason why this particular component was selected in the result.
     * Useful if multiple candidate components were found during dependency resolution.
     *
     * @return the reason for selecting the component
     </description>
    </method>
    <property name="dependencies" type="java.util.Set">
        <description>
     * &lt;p&gt;Returns the dependencies of this component. Includes resolved and unresolved dependencies (if any).
     *
     * &lt;p&gt;The elements of the returned collection are declared as {@link DependencyResult}, however the dependency instances will also implement one of the
     * following instances:&lt;/p&gt;
     *
     * &lt;ul&gt;
     *     &lt;li&gt;{@link ResolvedDependencyResult} for dependencies which were successfully resolved.&lt;/li&gt;
     *     &lt;li&gt;{@link UnresolvedDependencyResult} for dependencies which could not be resolved for some reason.&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @return the dependencies of this component
     </description>
    </property>
    <property name="dependents" type="java.util.Set">
        <description>
     * Returns the incoming dependencies of this component.
     *
     * @return the dependents of this component
     </description>
    </property>
    <property name="id" type="org.gradle.api.artifacts.component.ComponentIdentifier">
        <description>
     * &lt;p&gt;Returns the identifier of this component. This can be used to uniquely identify the component within the current build, but it is not necessarily unique between
     * different builds.
     *
     * &lt;p&gt;The return type is declared as an opaque {@link ComponentIdentifier}, however the identifier may also implement one of the following interfaces:&lt;/p&gt;
     *
     * &lt;ul&gt;
     *     &lt;li&gt;{@link org.gradle.api.artifacts.component.ProjectComponentIdentifier} for those component instances which are produced by the current build.&lt;/li&gt;
     *     &lt;li&gt;{@link org.gradle.api.artifacts.component.ModuleComponentIdentifier} for those component instances which are found in some repository.&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @return the identifier of this component
     </description>
    </property>
    <property name="moduleVersion" type="org.gradle.api.artifacts.ModuleVersionIdentifier">
        <description>
     * Returns the module version which this component belongs to, if any. A component will belong to a module version if it was found in some repository, or if the
     * module version for the component has been declared, usually by declaring how the component should be published.
     *
     * @return the module version of the component, or {@code null} if this component has no associated module version.
     </description>
    </property>
    <property name="selectionReason" type="org.gradle.api.artifacts.result.ComponentSelectionReason">
        <description>
     * Returns the reason why this particular component was selected in the result.
     * Useful if multiple candidate components were found during dependency resolution.
     *
     * @return the reason for selecting the component
     </description>
    </property>
</type>
