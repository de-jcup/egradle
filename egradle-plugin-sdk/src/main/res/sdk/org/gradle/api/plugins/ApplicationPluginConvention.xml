<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type language="gradle" name="org.gradle.api.plugins.ApplicationPluginConvention" version="3.0" documented="true">
    <description>
 * &lt;p&gt;The {@link Convention} used for configuring the {@link ApplicationPlugin}.&lt;/p&gt;
 </description>
    <method name="getApplicationDefaultJvmArgs" returnType="java.lang.Iterable">
        <description>
     * Array of string arguments to pass to the JVM when running the application
     </description>
    </method>
    <method name="getApplicationDistribution" returnType="org.gradle.api.file.CopySpec">
        <description>
     * &lt;p&gt;The specification of the contents of the distribution.&lt;/p&gt;
     * &lt;p&gt;
     * Use this {@link org.gradle.api.file.CopySpec} to include extra files/resource in the application distribution.
     * &lt;pre autoTested=''&gt;
     * apply plugin: 'application'
     *
     * applicationDistribution.from("some/dir") {
     *   include "*.txt"
     * }
     * &lt;/pre&gt;
     * &lt;p&gt;
     * Note that the application plugin pre configures this spec to; include the contents of "{@code src/dist}",
     * copy the application start scripts into the "{@code bin}" directory, and copy the built jar and its dependencies
     * into the "{@code lib}" directory.
     </description>
    </method>
    <method name="getApplicationName" returnType="java.lang.String">
        <description>
     * The name of the application.
     </description>
    </method>
    <method name="getMainClassName" returnType="java.lang.String">
        <description>
     * The fully qualified name of the application's main class.
     </description>
    </method>
    <method name="getProject" returnType="org.gradle.api.Project"/>
    <method name="setApplicationDefaultJvmArgs" returnType="void">
        <description>
     * Array of string arguments to pass to the JVM when running the application
     </description>
        <parameter type="java.lang.Iterable" name="applicationDefaultJvmArgs"/>
    </method>
    <method name="setApplicationDistribution" returnType="void">
        <parameter type="org.gradle.api.file.CopySpec" name="applicationDistribution"/>
    </method>
    <method name="setApplicationName" returnType="void">
        <description>
     * The name of the application.
     </description>
        <parameter type="java.lang.String" name="applicationName"/>
    </method>
    <method name="setMainClassName" returnType="void">
        <description>
     * The fully qualified name of the application's main class.
     </description>
        <parameter type="java.lang.String" name="mainClassName"/>
    </method>
    <property name="applicationDefaultJvmArgs" type="java.lang.Iterable" documented="true">
        <description>
     * Array of string arguments to pass to the JVM when running the application
     </description>
    </property>
    <property name="applicationDistribution" type="org.gradle.api.file.CopySpec" documented="true">
        <description>
     * &lt;p&gt;The specification of the contents of the distribution.&lt;/p&gt;
     * &lt;p&gt;
     * Use this {@link org.gradle.api.file.CopySpec} to include extra files/resource in the application distribution.
     * &lt;pre autoTested=''&gt;
     * apply plugin: 'application'
     *
     * applicationDistribution.from("some/dir") {
     *   include "*.txt"
     * }
     * &lt;/pre&gt;
     * &lt;p&gt;
     * Note that the application plugin pre configures this spec to; include the contents of "{@code src/dist}",
     * copy the application start scripts into the "{@code bin}" directory, and copy the built jar and its dependencies
     * into the "{@code lib}" directory.
     </description>
    </property>
    <property name="applicationName" type="java.lang.String" documented="true">
        <description>
     * The name of the application.
     </description>
    </property>
    <property name="mainClassName" type="java.lang.String" documented="true">
        <description>
     * The fully qualified name of the application's main class.
     </description>
    </property>
    <property name="project" type="org.gradle.api.Project"/>
</type>
