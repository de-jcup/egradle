<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.internal.ConventionMapping" version="3.0">
    <description> &lt;p&gt;A &lt;a href='type://ConventionMapping'&gt;ConventionMapping&lt;/a&gt; maintains the convention mappings for the properties of a particular object.&lt;/p&gt;

 &lt;p&gt;Implementations should also allow mappings to be set using dynamic properties.&lt;/p&gt;

</description>
    <method name="getConventionValue" returnType="T">
        <parameter type="T" name="actualValue"/>
        <parameter type="java.lang.String" name="propertyName"/>
        <parameter type="boolean" name="isExplicitValue"/>
    </method>
    <method name="map" returnType="org.gradle.api.internal.ConventionMapping.MappedProperty">
        <parameter type="java.lang.String" name="propertyName"/>
        <parameter type="groovy.lang.Closure" name="value"/>
    </method>
    <method name="map" returnType="org.gradle.api.internal.ConventionMapping.MappedProperty">
        <parameter type="java.lang.String" name="propertyName"/>
        <parameter type="java.util.concurrent.Callable" name="value"/>
    </method>
    <property name="conventionValue" type="T"/>
</type>
