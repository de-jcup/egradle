<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.artifacts.ComponentMetadata" version="3.0">
    <description>
 * Provides a read-only view of a resolved component's metadata, which typically originates from
 * a component descriptor (Ivy file, Maven POM).
 </description>
    <method name="getId" returnType="org.gradle.api.artifacts.ModuleVersionIdentifier">
        <description>
     * Returns the identifier of the component.
     *
     * @return the identifier of the component.
     </description>
    </method>
    <method name="getStatus" returnType="java.lang.String">
        <description>
     * Returns the status of the component. Must
     * match one of the values in {@link #getStatusScheme()}.
     *
     * @return the status of the component
     </description>
    </method>
    <method name="getStatusScheme" returnType="java.util.List">
        <description>
     * Returns the status scheme of the component. Values are
     * ordered from least to most mature status.
     * Defaults to {@code ["integration", "milestone", "release"]}.
     *
     * @return the status scheme of the component
     </description>
    </method>
    <method name="isChanging" returnType="boolean">
        <description>
     * Tells whether the component is changing or immutable.
     *
     * @return whether the component is changing or immutable.
     </description>
    </method>
    <property name="changing" type="boolean">
        <description>
     * Tells whether the component is changing or immutable.
     *
     * @return whether the component is changing or immutable.
     </description>
    </property>
    <property name="id" type="org.gradle.api.artifacts.ModuleVersionIdentifier">
        <description>
     * Returns the identifier of the component.
     *
     * @return the identifier of the component.
     </description>
    </property>
    <property name="status" type="java.lang.String">
        <description>
     * Returns the status of the component. Must
     * match one of the values in {@link #getStatusScheme()}.
     *
     * @return the status of the component
     </description>
    </property>
    <property name="statusScheme" type="java.util.List">
        <description>
     * Returns the status scheme of the component. Values are
     * ordered from least to most mature status.
     * Defaults to {@code ["integration", "milestone", "release"]}.
     *
     * @return the status scheme of the component
     </description>
    </property>
</type>
