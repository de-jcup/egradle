<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.NamedDomainObjectCollection" version="3.0" documented="true">
    <description> &lt;p&gt;A &lt;a href='type://NamedDomainObjectCollection'&gt;NamedDomainObjectCollection&lt;/a&gt; represents a collection of domain objects that have an inherent, constant, name.&lt;/p&gt;

 &lt;p&gt;Objects to be added to a named domain object collection must implement &lt;a href='type://equals()'&gt;equals()&lt;/a&gt; in such a way that no two objects
 with different names are considered equal. That is, all equality tests &lt;strong&gt;must&lt;/strong&gt; consider the name as an
 equality key. Behavior is undefined if two objects with different names are considered equal by their &lt;a href='type://equals()'&gt;equals()&lt;/a&gt; implementation.&lt;/p&gt;

 &lt;p&gt;All implementations &lt;strong&gt;must&lt;/strong&gt; guarantee that all elements in the collection are uniquely named. That is,
 an attempt to add an object with a name equal to the name of any existing object in the collection will fail.
 Implementations may choose to simply return false from &lt;a href='type://add(T)'&gt;add(T)&lt;/a&gt; or to throw an exception.&lt;/p&gt;

 &lt;p&gt;Objects in the collection are accessible as read-only properties, using the name of the object
 as the property name. For example (assuming the 'name' property provides the object name):&lt;/p&gt;

 &lt;pre&gt;
 books.add(new Book(name: "gradle", title: null))
 books.gradle.title = "Gradle in Action"
 &lt;/pre&gt;

 &lt;p&gt;A dynamic method is added for each object which takes a configuration closure. This is equivalent to calling
 &lt;a href='type://org.gradle.api.NamedDomainObjectCollection#getByName(String,'&gt;groovy.lang.Closure)&lt;/a&gt;. For example:&lt;/p&gt;

 &lt;pre&gt;
 books.add(new Book(name: "gradle", title: null))
 books.gradle {
   title = "Gradle in Action"
 }
 &lt;/pre&gt;

 &lt;p&gt;You can also use the &lt;a href='type://[]'&gt;[]&lt;/a&gt; operator to access the objects of a collection by name. For example:&lt;/p&gt;

 &lt;pre&gt;
 books.add(new Book(name: "gradle", title: null))
 books['gradle'].title = "Gradle in Action"
 &lt;/pre&gt;

 &lt;p&gt;&lt;a href='type://Rule'&gt;Rule&lt;/a&gt; objects can be attached to the collection in order to respond to requests for objects by name
 where no object with name exists in the collection. This mechanism can be used to create objects on demand. 
 For example: &lt;/p&gt;
 
 &lt;pre&gt;
 books.addRule('create any') { books.add(new Book(name: "gradle", title: null)) }
 books.gradle.name == "gradle"
 &lt;/pre&gt;
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;&lt;T&gt; The type of domain objects in this collection.

</description>
    <method name="add" returnType="boolean">
        <description> Adds an object to the collection, if there is no existing object in the collection with the same name.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;e the item to add to the collection
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;&lt;a href='type://true'&gt;true&lt;/a&gt; if the item was added, or &lt;a href='type://'&gt;&lt;/a&gt; false if an item with the same name already exists.

</description>
        <parameter type="T" name="e"/>
    </method>
    <method name="addAll" returnType="boolean">
        <description> Adds any of the given objects to the collection that do not have the same name as any existing element.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;c the items to add to the collection
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;&lt;a href='type://true'&gt;true&lt;/a&gt; if any item was added, or &lt;a href='type://'&gt;&lt;/a&gt; false if all items have non unique names within this collection.

</description>
        <parameter type="java.util.Collection" name="c"/>
    </method>
    <method name="addRule" returnType="org.gradle.api.Rule">
        <description> Adds a rule to this collection. The given rule is invoked when an unknown object is requested by name.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;rule The rule to add.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The added rule.

</description>
        <parameter type="org.gradle.api.Rule" name="rule"/>
    </method>
    <method name="addRule" returnType="org.gradle.api.Rule">
        <description> Adds a rule to this collection. The given closure is executed when an unknown object is requested by name. The
 requested name is passed to the closure as a parameter.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;description The description of the rule.
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;ruleAction The closure to execute to apply the rule.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The added rule.

</description>
        <parameter type="java.lang.String" name="description"/>
        <parameter type="groovy.lang.Closure" name="ruleAction"/>
    </method>
    <method name="findByName" returnType="T">
        <description> Locates an object by name, returning null if there is no such object.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name The object name
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The object with the given name, or null if there is no such object in this collection.

</description>
        <parameter type="java.lang.String" name="name"/>
    </method>
    <method name="getAsMap" returnType="java.util.SortedMap">
        <description> &lt;p&gt;Returns the objects in this collection, as a map from object name to object instance.&lt;/p&gt;

 &lt;p&gt;The map is ordered by the &lt;em&gt;natural ordering&lt;/em&gt; of the object names (i.e. keys).&lt;/p&gt;

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The objects. Returns an empty map if this collection is empty.

</description>
    </method>
    <method name="getAt" returnType="T" documented="true">
        <description> Locates an object by name, failing if there is no such task. This method is identical to &lt;a href='type://org.gradle.api.NamedDomainObjectCollection#getByName(String)'&gt;#getByName(String)&lt;/a&gt;. You can call this method in your build script by using the groovy &lt;a href='type://[]'&gt;[]&lt;/a&gt; operator.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name The object name
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The object with the given name. Never returns null.
 @throws UnknownDomainObjectException when there is no such object in this collection.

</description>
        <parameter type="java.lang.String" name="name"/>
    </method>
    <method name="getByName" returnType="T" documented="true">
        <description> Locates an object by name, failing if there is no such object.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name The object name
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The object with the given name. Never returns null.
 @throws UnknownDomainObjectException when there is no such object in this collection.

</description>
        <parameter type="java.lang.String" name="name"/>
    </method>
    <method name="getByName" returnType="T" documented="true">
        <description> Locates an object by name, failing if there is no such object. The given configure closure is executed against
 the object before it is returned from this method. The object is passed to the closure as its delegate.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name The object name
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;configureClosure The closure to use to configure the object.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The object with the given name, after the configure closure has been applied to it. Never returns null.
 @throws UnknownDomainObjectException when there is no such object in this collection.

</description>
        <parameter type="java.lang.String" name="name"/>
        <parameter type="groovy.lang.Closure" name="configureClosure"/>
    </method>
    <method name="getNamer" returnType="org.gradle.api.Namer">
        <description> An object that represents the naming strategy used to name objects of this collection.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;Object representing the naming strategy.

</description>
    </method>
    <method name="getNames" returnType="java.util.SortedSet">
        <description> &lt;p&gt;Returns the names of the objects in this collection as a Set of Strings.&lt;/p&gt;

 &lt;p&gt;The set of names is in &lt;em&gt;natural ordering&lt;/em&gt;.&lt;/p&gt;

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The names. Returns an empty set if this collection is empty.

</description>
    </method>
    <method name="getRules" returnType="java.util.List">
        <description> Returns the rules used by this collection.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The rules, in the order they will be applied.

</description>
    </method>
    <method name="matching" returnType="org.gradle.api.NamedDomainObjectCollection">
        <description> {@inheritDoc}

</description>
        <parameter type="groovy.lang.Closure" name="spec"/>
    </method>
    <method name="matching" returnType="org.gradle.api.NamedDomainObjectCollection">
        <description> {@inheritDoc}

</description>
        <parameter type="org.gradle.api.specs.Spec" name="spec"/>
    </method>
    <method name="withType" returnType="org.gradle.api.NamedDomainObjectCollection">
        <description> {@inheritDoc}

</description>
        <parameter type="java.lang.Class" name="type"/>
    </method>
    <interface name="org.gradle.api.DomainObjectCollection"/>
    <property name="asMap" type="java.util.SortedMap">
        <description> &lt;p&gt;Returns the objects in this collection, as a map from object name to object instance.&lt;/p&gt;

 &lt;p&gt;The map is ordered by the &lt;em&gt;natural ordering&lt;/em&gt; of the object names (i.e. keys).&lt;/p&gt;

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The objects. Returns an empty map if this collection is empty.

</description>
    </property>
    <property name="at" type="T">
        <description> Locates an object by name, failing if there is no such task. This method is identical to &lt;a href='type://org.gradle.api.NamedDomainObjectCollection#getByName(String)'&gt;#getByName(String)&lt;/a&gt;. You can call this method in your build script by using the groovy &lt;a href='type://[]'&gt;[]&lt;/a&gt; operator.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name The object name
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The object with the given name. Never returns null.
 @throws UnknownDomainObjectException when there is no such object in this collection.

</description>
    </property>
    <property name="byName" type="T">
        <description> Locates an object by name, failing if there is no such object. The given configure closure is executed against
 the object before it is returned from this method. The object is passed to the closure as its delegate.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name The object name
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;configureClosure The closure to use to configure the object.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The object with the given name, after the configure closure has been applied to it. Never returns null.
 @throws UnknownDomainObjectException when there is no such object in this collection.

</description>
    </property>
    <property name="namer" type="org.gradle.api.Namer">
        <description> An object that represents the naming strategy used to name objects of this collection.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;Object representing the naming strategy.

</description>
    </property>
    <property name="names" type="java.util.SortedSet">
        <description> &lt;p&gt;Returns the names of the objects in this collection as a Set of Strings.&lt;/p&gt;

 &lt;p&gt;The set of names is in &lt;em&gt;natural ordering&lt;/em&gt;.&lt;/p&gt;

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The names. Returns an empty set if this collection is empty.

</description>
    </property>
    <property name="rules" type="java.util.List">
        <description> Returns the rules used by this collection.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The rules, in the order they will be applied.

</description>
    </property>
</type>
