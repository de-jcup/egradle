<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.plugins.buildcomparison.gradle.GradleBuildInvocationSpec" version="3.0" documented="true">
    <description>
 * A specification for launching a Gradle build with a specified Gradle version.
  </description>
    <method name="getArguments" returnType="java.util.List">
        <description>
     * The command line arguments (excluding tasks) to invoke the build with.
     *
     * @return The command line arguments (excluding tasks) to invoke the build with.
     </description>
    </method>
    <method name="getGradleVersion" returnType="java.lang.String">
        <description>
     * The Gradle version to run the build with.
     *
     * Defaults to the current Gradle version of the running build.
     *
     * @return The Gradle version to run the build with. Never null.
     </description>
    </method>
    <method name="getProjectDir" returnType="java.io.File">
        <description>
     * The “root” directory of the build.
     *
     * Defaults to the current build's root directory.
     *
     * @return The “root” project directory of the build. Never null.
     </description>
    </method>
    <method name="getTasks" returnType="java.util.List">
        <description>
     * The tasks to execute.
     *
     * Defaults to an empty list.
     *
     * @return The tasks to execute.
     </description>
    </method>
    <method name="setArguments" returnType="void">
        <description>
     * Sets the command line arguments (excluding tasks) to invoke the build with.
     * @param arguments The command line arguments (excluding tasks) to invoke the build with.
     </description>
        <parameter type="java.lang.Iterable" name="arguments"/>
    </method>
    <method name="setGradleVersion" returnType="void">
        <description>
     * Sets the Gradle version to run the build with.
     *
     * The value must be a valid, published, Gradle version number.
     *
     * Examples are:
     * &lt;ul&gt;
     * &lt;li&gt;{@code "1.1"}&lt;/li&gt;
     * &lt;li&gt;{@code "1.0-rc-1"}&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @param gradleVersion The Gradle version to run the build with.
     </description>
        <parameter type="java.lang.String" name="gradleVersion"/>
    </method>
    <method name="setProjectDir" returnType="void">
        <description>
     * Sets the “root” directory of the build.
     *
     * This should not be the project directory of child project in a multi project build.
     * It should always be the root of the multiproject build.
     *
     * The value is interpreted as a file as per {@link org.gradle.api.Project#file(Object)}.
     *
     * @param projectDir The “root” directory of the build.
     </description>
        <parameter type="java.lang.Object" name="projectDir"/>
    </method>
    <method name="setTasks" returnType="void">
        <description>
     * Sets the tasks to execute.
     *
     * @param tasks The tasks to execute.
     </description>
        <parameter type="java.lang.Iterable" name="tasks"/>
    </method>
    <property name="arguments" type="java.util.List" documented="true">
        <description>
     * The command line arguments (excluding tasks) to invoke the build with.
     *
     * @return The command line arguments (excluding tasks) to invoke the build with.
     </description>
    </property>
    <property name="gradleVersion" type="java.lang.String" documented="true">
        <description>
     * The Gradle version to run the build with.
     *
     * Defaults to the current Gradle version of the running build.
     *
     * @return The Gradle version to run the build with. Never null.
     </description>
    </property>
    <property name="projectDir" type="java.io.File" documented="true">
        <description>
     * The “root” directory of the build.
     *
     * Defaults to the current build's root directory.
     *
     * @return The “root” project directory of the build. Never null.
     </description>
    </property>
    <property name="tasks" type="java.util.List" documented="true">
        <description>
     * The tasks to execute.
     *
     * Defaults to an empty list.
     *
     * @return The tasks to execute.
     </description>
    </property>
</type>
