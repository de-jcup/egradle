<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.tasks.TaskOutputs" version="3.0">
    <description>
 * &lt;p&gt;A {@code TaskOutputs} represents the outputs of a task.&lt;/p&gt;
 *
 * &lt;p&gt;You can obtain a {@code TaskOutputs} instance using {@link org.gradle.api.Task#getOutputs()}.&lt;/p&gt;
 </description>
    <method name="cacheIf" returnType="void">
        <description>
     * &lt;p&gt;Cache the results of the task only if the given spec is satisfied. The spec will be evaluated at task execution time, not
     * during configuration. If the Spec is not satisfied, the results of the task will not be cached.&lt;/p&gt;
     *
     * &lt;p&gt;You may add multiple such predicates. The results of the task are not cached if any of the predicates return false.&lt;/p&gt;
     *
     * @param spec specifies if the results of the task should be cached.
     </description>
        <parameter type="org.gradle.api.specs.Spec" name="spec"/>
    </method>
    <method name="dir" returnType="org.gradle.api.tasks.TaskOutputFilePropertyBuilder">
        <description>
     * Registers an output directory for this task.
     *
     * @param path The output directory. The given path is evaluated as per {@link org.gradle.api.Project#file(Object)}.
     * @return a property builder to further configure this property.
     </description>
        <parameter type="java.lang.Object" name="path"/>
    </method>
    <method name="file" returnType="org.gradle.api.tasks.TaskOutputFilePropertyBuilder">
        <description>
     * Registers some output file for this task.
     *
     * @param path The output file. The given path is evaluated as per {@link org.gradle.api.Project#file(Object)}.
     * @return a property builder to further configure this property.
     </description>
        <parameter type="java.lang.Object" name="path"/>
    </method>
    <method name="files" returnType="org.gradle.api.tasks.TaskOutputFilePropertyBuilder">
        <description>
     * Registers some output files for this task.
     *
     * @param paths The output files. The given paths are evaluated as per {@link org.gradle.api.Project#files(Object...)}.
     * @return a property builder to further configure this property.
     </description>
        <parameter type="java.lang.Object" name="paths"/>
    </method>
    <method name="getFiles" returnType="org.gradle.api.file.FileCollection">
        <description>
     * Returns the output files of this task.
     *
     * @return The output files. Returns an empty collection if this task has no output files.
     </description>
    </method>
    <method name="getHasOutput" returnType="boolean">
        <description>
     * Returns true if this task has declared any outputs. Note that a task may be able to produce output files and
     * still have an empty set of output files.
     *
     * @return true if this task has declared any outputs, otherwise false.
     </description>
    </method>
    <method name="upToDateWhen" returnType="void">
        <description>
     * &lt;p&gt;Adds a predicate to determine whether the outputs of this task are up-to-date. The given closure is executed
     * at task execution time. The closure is passed the task as a parameter. If the closure returns false, the task
     * outputs are considered out-of-date and the task will be executed.&lt;/p&gt;
     *
     * &lt;p&gt;You can add multiple such predicates. The task outputs are considered out-of-date when any predicate returns
     * false.&lt;p&gt;
     *
     * @param upToDateClosure The closure to use to determine whether the task outputs are up-to-date.
     </description>
        <parameter type="groovy.lang.Closure" name="upToDateClosure"/>
    </method>
    <method name="upToDateWhen" returnType="void">
        <description>
     * &lt;p&gt;Adds a predicate to determine whether the outputs of this task are up-to-date. The given spec is evaluated at
     * task execution time. If the spec returns false, the task outputs are considered out-of-date and the task will be
     * executed.&lt;/p&gt;
     *
     * &lt;p&gt;You can add multiple such predicates. The task outputs are considered out-of-date when any predicate returns
     * false.&lt;p&gt;
     *
     * @param upToDateSpec The spec to use to determine whether the task outputs are up-to-date.
     </description>
        <parameter type="org.gradle.api.specs.Spec" name="upToDateSpec"/>
    </method>
    <interface name="org.gradle.api.tasks.CompatibilityAdapterForTaskOutputs"/>
    <property name="files" type="org.gradle.api.file.FileCollection">
        <description>
     * Returns the output files of this task.
     *
     * @return The output files. Returns an empty collection if this task has no output files.
     </description>
    </property>
    <property name="hasOutput" type="boolean">
        <description>
     * Returns true if this task has declared any outputs. Note that a task may be able to produce output files and
     * still have an empty set of output files.
     *
     * @return true if this task has declared any outputs, otherwise false.
     </description>
    </property>
</type>
