<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type language="gradle" name="org.gradle.api.tasks.bundling.War" version="3.0" superType="org.gradle.api.tasks.bundling.Jar" documented="true">
    <description>
 * Assembles a WAR archive.
 </description>
    <method name="apply" returnType="boolean">
        <parameter type="java.io.File" name="input"/>
    </method>
    <method name="call" returnType="java.lang.Iterable"/>
    <method name="classpath" returnType="void" documented="true">
        <description>
     * Adds files to the classpath to include in the WAR archive.
     *
     * @param classpath The files to add. These are evaluated as per {@link org.gradle.api.Project#files(Object...)}
     </description>
        <parameter type="java.lang.Object" name="classpath"/>
    </method>
    <method name="execute" returnType="void">
        <parameter type="org.gradle.api.file.CopySpec" name="it"/>
    </method>
    <method name="getClasspath" returnType="org.gradle.api.file.FileCollection">
        <description>
     * Returns the classpath to include in the WAR archive. Any JAR or ZIP files in this classpath are included in the {@code WEB-INF/lib} directory. Any directories in this classpath are included in
     * the {@code WEB-INF/classes} directory.
     *
     * @return The classpath. Returns an empty collection when there is no classpath to include in the WAR.
     </description>
    </method>
    <method name="getWebInf" returnType="org.gradle.api.file.CopySpec"/>
    <method name="getWebXml" returnType="java.io.File">
        <description>
     * Returns the {@code web.xml} file to include in the WAR archive. When {@code null}, no {@code web.xml} file is included in the WAR.
     *
     * @return The {@code web.xml} file.
     </description>
    </method>
    <method name="setClasspath" returnType="void">
        <description>
     * Sets the classpath to include in the WAR archive.
     *
     * @param classpath The classpath. Must not be null.
     </description>
        <parameter type="java.lang.Object" name="classpath"/>
    </method>
    <method name="setWebXml" returnType="void">
        <description>
     * Sets the {@code web.xml} file to include in the WAR archive. When {@code null}, no {@code web.xml} file is included in the WAR.
     *
     * @param webXml The {@code web.xml} file. Maybe null.
     </description>
        <parameter type="java.io.File" name="webXml"/>
    </method>
    <method name="transform" returnType="java.lang.String">
        <parameter type="java.lang.String" name="it"/>
    </method>
    <method name="webInf" returnType="org.gradle.api.file.CopySpec" delegationTarget="org.gradle.api.file.CopySpec" documented="true">
        <description>
     * Adds some content to the {@code WEB-INF} directory for this WAR archive.
     *
     * &lt;p&gt;The given closure is executed to configure a {@link CopySpec}. The {@code CopySpec} is passed to the closure as its delegate.
     *
     * @param configureClosure The closure to execute
     * @return The newly created {@code CopySpec}.
     </description>
        <parameter type="groovy.lang.Closure" name="configureClosure"/>
    </method>
    <property name="classpath" type="org.gradle.api.file.FileCollection" documented="true">
        <description>
     * Returns the classpath to include in the WAR archive. Any JAR or ZIP files in this classpath are included in the {@code WEB-INF/lib} directory. Any directories in this classpath are included in
     * the {@code WEB-INF/classes} directory.
     *
     * @return The classpath. Returns an empty collection when there is no classpath to include in the WAR.
     </description>
    </property>
    <property name="webInf" type="org.gradle.api.file.CopySpec"/>
    <property name="webXml" type="java.io.File" documented="true">
        <description>
     * Returns the {@code web.xml} file to include in the WAR archive. When {@code null}, no {@code web.xml} file is included in the WAR.
     *
     * @return The {@code web.xml} file.
     </description>
    </property>
</type>
