<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.execution.TaskExecutionListener" version="3.0">
    <description>
 * &lt;p&gt;A {@code TaskExecutionListener} is notified of the execution of the tasks in a build.&lt;/p&gt;
 *
 * &lt;p&gt;You can add a {@code TaskExecutionListener} to a build using {@link org.gradle.api.execution.TaskExecutionGraph#addTaskExecutionListener}
 </description>
    <method name="afterExecute" returnType="void">
        <description>
     * This method is call immediately after a task has been executed. It is always called, regardless of whether the
     * task completed successfully, or failed with an exception.
     *
     * @param task The task which was executed. Never null.
     * @param state The task state. If the task failed with an exception, the exception is available in this
     * state. Never null.
     </description>
        <parameter type="org.gradle.api.Task" name="task"/>
        <parameter type="org.gradle.api.tasks.TaskState" name="state"/>
    </method>
    <method name="beforeExecute" returnType="void">
        <description>
     * This method is called immediately before a task is executed.
     *
     * @param task The task about to be executed. Never null.
     </description>
        <parameter type="org.gradle.api.Task" name="task"/>
    </method>
</type>
