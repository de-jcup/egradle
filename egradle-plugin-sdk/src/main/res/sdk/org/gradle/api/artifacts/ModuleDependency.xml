<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.api.artifacts.ModuleDependency" version="3.0">
    <description> 
 A &lt;a href='type://ModuleDependency'&gt;ModuleDependency&lt;/a&gt; is a &lt;a href='type://org.gradle.api.artifacts.Dependency'&gt;org.gradle.api.artifacts.Dependency&lt;/a&gt; on a module outside the current 
 project. 
 &lt;p&gt; 
 For examples on configuring the exclude rules please refer to &lt;a href='type://ModuleDependency#exclude(java.util.Map)'&gt;#exclude(java.util.Map)&lt;/a&gt;. 
</description>
    <method name="addArtifact" returnType="org.gradle.api.artifacts.ModuleDependency">
        <description> 
 &lt;p&gt;Adds an artifact to this dependency.&lt;/p&gt; 
 
 &lt;p&gt;If no artifact is added to a dependency, an implicit default artifact is used. This default artifact has the 
 same name as the module and its type and extension is &lt;em&gt;jar&lt;/em&gt;. If at least one artifact is explicitly added, 
 the implicit default artifact won't be used any longer.&lt;/p&gt; 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this 
</description>
        <parameter type="org.gradle.api.artifacts.DependencyArtifact" name="artifact"/>
    </method>
    <method name="artifact" returnType="org.gradle.api.artifacts.DependencyArtifact" delegationTarget="org.gradle.api.artifacts.DependencyArtifact">
        <description> 
 &lt;p&gt;Adds an artifact to this dependency. The given closure is passed a &lt;a href='type://org.gradle.api.artifacts.DependencyArtifact'&gt;org.gradle.api.artifacts.DependencyArtifact&lt;/a&gt; instance, which it can configure.&lt;/p&gt; 
 
 &lt;p&gt;If no artifact is added to a dependency, an implicit default artifact is used. This default artifact has the 
 same name as the module and its type and extension is &lt;em&gt;jar&lt;/em&gt;. If at least one artifact is explicitly added, 
 the implicit default artifact won't be used any longer.&lt;/p&gt; 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this 
</description>
        <parameter type="groovy.lang.Closure" name="configureClosure"/>
    </method>
    <method name="copy" returnType="org.gradle.api.artifacts.ModuleDependency">
        <description> 
 {@inheritDoc} 
</description>
    </method>
    <method name="exclude" returnType="org.gradle.api.artifacts.ModuleDependency">
        <description> 
 Adds an exclude rule to exclude transitive dependencies of this dependency. 
 &lt;p&gt; 
 Excluding a particular transitive dependency does not guarantee that it does not show up 
 in the dependencies of a given configuration. 
 For example, some other dependency, which does not have any exclude rules, 
 might pull in exactly the same transitive dependency. 
 To guarantee that the transitive dependency is excluded from the entire configuration 
 please use per-configuration exclude rules: &lt;a href='type://Configuration#getExcludeRules()'&gt;Configuration#getExcludeRules()&lt;/a&gt;. 
 In fact, in majority of cases the actual intention of configuring per-dependency exclusions 
 is really excluding a dependency from the entire configuration (or classpath). 
 &lt;p&gt; 
 If your intention is to exclude a particular transitive dependency 
 because you don't like the version it pulls in to the configuration 
 then consider using forced versions' feature: &lt;a href='type://ResolutionStrategy#force(Object...)'&gt;ResolutionStrategy#force(Object...)&lt;/a&gt;. 
 
 &lt;pre autoTested=''&gt; 
 apply plugin: 'java' //so that I can declare 'compile' dependencies 
 
 dependencies { 
     //excluding a particular transitive dependency: 
     exclude module: 'cglib' //by artifact name 
     exclude group: 'org.jmock' //by group 
     exclude group: 'org.unwanted', module: 'iAmBuggy' //by both name and group 
   } 
 } 
 
 &lt;/pre&gt; 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;excludeProperties the properties to define the exclude rule. 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this 
</description>
        <parameter type="java.util.Map" name="excludeProperties"/>
    </method>
    <method name="getArtifacts" returnType="java.util.Set">
        <description> 
 Returns the artifacts belonging to this dependency. 
 
 @see #addArtifact(DependencyArtifact) 
</description>
    </method>
    <method name="getConfiguration" returnType="java.lang.String">
        <description> 
 Returns the configuration of this dependency module (not the configurations this dependency belongs too). Never 
 returns null. The default value for the configuration is &lt;a href='type://ModuleDependency#DEFAULT_CONFIGURATION'&gt;#DEFAULT_CONFIGURATION&lt;/a&gt;. A dependency source 
 might have multiple configurations. Every configuration represents a different set of artifacts and dependencies 
 for this dependency module. 
</description>
    </method>
    <method name="getExcludeRules" returnType="java.util.Set">
        <description> 
 Returns the exclude rules for this dependency. 
 
 @see #exclude(java.util.Map) 
</description>
    </method>
    <method name="isTransitive" returnType="boolean">
        <description> 
 Returns whether this dependency should be resolved including or excluding its transitive dependencies. 
 
 @see #setTransitive(boolean) 
</description>
    </method>
    <method name="setTransitive" returnType="org.gradle.api.artifacts.ModuleDependency">
        <description> 
 Sets whether this dependency should be resolved including or excluding its transitive dependencies. The artifacts 
 belonging to this dependency might themselve have dependencies on other artifacts. The latter are called 
 transitive dependencies. 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;transitive Whether transitive dependencies should be resolved. 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this 
</description>
        <parameter type="boolean" name="transitive"/>
    </method>
    <interface name="org.gradle.api.artifacts.Dependency"/>
    <property name="artifacts" type="java.util.Set">
        <description> 
 Returns the artifacts belonging to this dependency. 
 
 @see #addArtifact(DependencyArtifact) 
</description>
    </property>
    <property name="configuration" type="java.lang.String">
        <description> 
 Returns the configuration of this dependency module (not the configurations this dependency belongs too). Never 
 returns null. The default value for the configuration is &lt;a href='type://ModuleDependency#DEFAULT_CONFIGURATION'&gt;#DEFAULT_CONFIGURATION&lt;/a&gt;. A dependency source 
 might have multiple configurations. Every configuration represents a different set of artifacts and dependencies 
 for this dependency module. 
</description>
    </property>
    <property name="excludeRules" type="java.util.Set">
        <description> 
 Returns the exclude rules for this dependency. 
 
 @see #exclude(java.util.Map) 
</description>
    </property>
    <property name="transitive" type="boolean">
        <description> 
 Returns whether this dependency should be resolved including or excluding its transitive dependencies. 
 
 @see #setTransitive(boolean) 
</description>
    </property>
    <documentation/>
</type>
