<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.nativeplatform.NativeBinarySpec" version="3.0" documented="true">
    <description>
 * Represents a binary artifact that is the result of building a native component.
 </description>
    <method name="getAssembler" returnType="org.gradle.nativeplatform.Tool">
        <description>
     * The configuration of the assembler used when compiling assembly sources this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'assembler' plugin is applied.
     </description>
    </method>
    <method name="getBuildType" returnType="org.gradle.nativeplatform.BuildType">
        <description>
     * Returns the {@link org.gradle.nativeplatform.BuildType} used to construct this binary.
     </description>
    </method>
    <method name="getComponent" returnType="org.gradle.nativeplatform.NativeComponentSpec">
        <description>
     * The component that this binary was built from.
     </description>
    </method>
    <method name="getCppCompiler" returnType="org.gradle.nativeplatform.PreprocessingTool">
        <description>
     * The configuration of the C++ compiler used when compiling C++ sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'cpp' plugin is applied.
     </description>
    </method>
    <method name="getFlavor" returnType="org.gradle.nativeplatform.Flavor">
        <description>
     * The {@link org.gradle.nativeplatform.Flavor} that this binary was built with.
     </description>
    </method>
    <method name="getLibs" returnType="java.util.Collection">
        <description>
     * The libraries that should be linked into this binary.
     </description>
    </method>
    <method name="getLinker" returnType="org.gradle.nativeplatform.Tool">
        <description>
     * The configuration of the linker used when linking this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec} and {@link NativeExecutableBinarySpec}.
     </description>
    </method>
    <method name="getObjcCompiler" returnType="org.gradle.nativeplatform.PreprocessingTool">
        <description>
     * The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'objective-c' plugin is applied.
     </description>
    </method>
    <method name="getObjcppCompiler" returnType="org.gradle.nativeplatform.PreprocessingTool">
        <description>
     * The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'objective-cpp' plugin is applied.
     </description>
    </method>
    <method name="getRcCompiler" returnType="org.gradle.nativeplatform.PreprocessingTool">
        <description>
     * The configuration of the Resource compiler used when compiling resources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'windows-resources' plugin is applied.
     </description>
    </method>
    <method name="getStaticLibArchiver" returnType="org.gradle.nativeplatform.Tool">
        <description>
     * The configuration of the static library archiver used when creating this binary.
     *
     * Valid for {@link StaticLibraryBinarySpec}.
     </description>
    </method>
    <method name="getTargetPlatform" returnType="org.gradle.nativeplatform.platform.NativePlatform">
        <description>
     * Returns the {@link org.gradle.nativeplatform.platform.NativePlatform} that this binary is targeted to run on.
     </description>
    </method>
    <method name="getToolChain" returnType="org.gradle.nativeplatform.toolchain.NativeToolChain">
        <description>
     * Returns the {@link org.gradle.nativeplatform.toolchain.NativeToolChain} that will be used to build this binary.
     </description>
    </method>
    <method name="getcCompiler" returnType="org.gradle.nativeplatform.PreprocessingTool">
        <description>
     * The configuration of the C compiler used when compiling C sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'c' plugin is applied.
     </description>
    </method>
    <method name="lib" returnType="void" documented="true">
        <description>
     * Adds a library as input to this binary.
     * &lt;p/&gt;
     * This method accepts the following types:
     *
     * &lt;ul&gt;
     *     &lt;li&gt;A {@link NativeLibrarySpec}&lt;/li&gt;
     *     &lt;li&gt;A {@link NativeDependencySet}&lt;/li&gt;
     *     &lt;li&gt;A {@link java.util.Map} containing the library selector.&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * The Map notation supports the following String attributes:
     *
     * &lt;ul&gt;
     *     &lt;li&gt;project: the path to the project containing the library (optional, defaults to current project)&lt;/li&gt;
     *     &lt;li&gt;library: the name of the library (required)&lt;/li&gt;
     *     &lt;li&gt;linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')&lt;/li&gt;
     * &lt;/ul&gt;
     </description>
        <parameter type="java.lang.Object" name="library"/>
    </method>
    <interface name="org.gradle.platform.base.BinarySpec"/>
    <property name="assembler" type="org.gradle.nativeplatform.Tool" documented="true">
        <description>
     * The configuration of the assembler used when compiling assembly sources this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'assembler' plugin is applied.
     </description>
    </property>
    <property name="buildType" type="org.gradle.nativeplatform.BuildType" documented="true">
        <description>
     * Returns the {@link org.gradle.nativeplatform.BuildType} used to construct this binary.
     </description>
    </property>
    <property name="cCompiler" type="org.gradle.nativeplatform.PreprocessingTool" documented="true">
        <description>
     * The configuration of the C compiler used when compiling C sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'c' plugin is applied.
     </description>
    </property>
    <property name="component" type="org.gradle.nativeplatform.NativeComponentSpec" documented="true">
        <description>
     * The component that this binary was built from.
     </description>
    </property>
    <property name="cppCompiler" type="org.gradle.nativeplatform.PreprocessingTool" documented="true">
        <description>
     * The configuration of the C++ compiler used when compiling C++ sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'cpp' plugin is applied.
     </description>
    </property>
    <property name="flavor" type="org.gradle.nativeplatform.Flavor" documented="true">
        <description>
     * The {@link org.gradle.nativeplatform.Flavor} that this binary was built with.
     </description>
    </property>
    <property name="libs" type="java.util.Collection" documented="true">
        <description>
     * The libraries that should be linked into this binary.
     </description>
    </property>
    <property name="linker" type="org.gradle.nativeplatform.Tool" documented="true">
        <description>
     * The configuration of the linker used when linking this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec} and {@link NativeExecutableBinarySpec}.
     </description>
    </property>
    <property name="objcCompiler" type="org.gradle.nativeplatform.PreprocessingTool" documented="true">
        <description>
     * The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'objective-c' plugin is applied.
     </description>
    </property>
    <property name="objcppCompiler" type="org.gradle.nativeplatform.PreprocessingTool" documented="true">
        <description>
     * The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'objective-cpp' plugin is applied.
     </description>
    </property>
    <property name="rcCompiler" type="org.gradle.nativeplatform.PreprocessingTool" documented="true">
        <description>
     * The configuration of the Resource compiler used when compiling resources for this binary.
     *
     * Valid for {@link SharedLibraryBinarySpec}, {@link StaticLibraryBinarySpec} and
     * {@link NativeExecutableBinarySpec} when the 'windows-resources' plugin is applied.
     </description>
    </property>
    <property name="staticLibArchiver" type="org.gradle.nativeplatform.Tool" documented="true">
        <description>
     * The configuration of the static library archiver used when creating this binary.
     *
     * Valid for {@link StaticLibraryBinarySpec}.
     </description>
    </property>
    <property name="targetPlatform" type="org.gradle.nativeplatform.platform.NativePlatform" documented="true">
        <description>
     * Returns the {@link org.gradle.nativeplatform.platform.NativePlatform} that this binary is targeted to run on.
     </description>
    </property>
    <property name="toolChain" type="org.gradle.nativeplatform.toolchain.NativeToolChain" documented="true">
        <description>
     * Returns the {@link org.gradle.nativeplatform.toolchain.NativeToolChain} that will be used to build this binary.
     </description>
    </property>
</type>
