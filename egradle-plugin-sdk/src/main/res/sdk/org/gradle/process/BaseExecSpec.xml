<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.process.BaseExecSpec" version="3.0">
    <description>
 * Specifies options for launching a child process.
 </description>
    <method name="getCommandLine" returnType="java.util.List">
        <description>
     * Returns the full command line, including the executable plus its arguments.
     *
     * @return The full command line, including the executable plus its arguments
     </description>
    </method>
    <method name="getErrorOutput" returnType="java.io.OutputStream">
        <description>
     * Returns the output stream to consume standard error from the process executing the command. Default to {@code
     * System.err}.
     *
     * @return The error output stream.
     </description>
    </method>
    <method name="getStandardInput" returnType="java.io.InputStream">
        <description>
     * Returns the standard input stream for the process executing the command. The stream is closed after the process
     * completes. Defaults to an empty stream.
     *
     * @return The standard input stream.
     </description>
    </method>
    <method name="getStandardOutput" returnType="java.io.OutputStream">
        <description>
     * Returns the output stream to consume standard output from the process executing the command. Defaults to {@code
     * System.out}.
     *
     * @return The output stream
     </description>
    </method>
    <method name="isIgnoreExitValue" returnType="boolean">
        <description>
     * Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to &lt;code&gt;false&lt;/code&gt;.
     *
     * @return whether a non-zero exit value is ignored, or an exception thrown
     </description>
    </method>
    <method name="setErrorOutput" returnType="org.gradle.process.BaseExecSpec">
        <description>
     * Sets the output stream to consume standard error from the process executing the command. The stream is closed
     * after the process completes.
     *
     * @param outputStream The standard output error stream for the process. Must not be null.
     * @return this
     </description>
        <parameter type="java.io.OutputStream" name="outputStream"/>
    </method>
    <method name="setIgnoreExitValue" returnType="org.gradle.process.BaseExecSpec">
        <description>
     * Sets whether a non-zero exit value is ignored, or an exception thrown.
     *
     * @param ignoreExitValue whether a non-zero exit value is ignored, or an exception thrown
     * @return this
     </description>
        <parameter type="boolean" name="ignoreExitValue"/>
    </method>
    <method name="setStandardInput" returnType="org.gradle.process.BaseExecSpec">
        <description>
     * Sets the standard input stream for the process executing the command. The stream is closed after the process
     * completes.
     *
     * @param inputStream The standard input stream for the process. Must not be null.
     * @return this
     </description>
        <parameter type="java.io.InputStream" name="inputStream"/>
    </method>
    <method name="setStandardOutput" returnType="org.gradle.process.BaseExecSpec">
        <description>
     * Sets the output stream to consume standard output from the process executing the command. The stream is closed
     * after the process completes.
     *
     * @param outputStream The standard output stream for the process. Must not be null.
     * @return this
     </description>
        <parameter type="java.io.OutputStream" name="outputStream"/>
    </method>
    <interface name="org.gradle.process.ProcessForkOptions"/>
    <property name="commandLine" type="java.util.List">
        <description>
     * Returns the full command line, including the executable plus its arguments.
     *
     * @return The full command line, including the executable plus its arguments
     </description>
    </property>
    <property name="errorOutput" type="java.io.OutputStream">
        <description>
     * Returns the output stream to consume standard error from the process executing the command. Default to {@code
     * System.err}.
     *
     * @return The error output stream.
     </description>
    </property>
    <property name="ignoreExitValue" type="boolean">
        <description>
     * Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to &lt;code&gt;false&lt;/code&gt;.
     *
     * @return whether a non-zero exit value is ignored, or an exception thrown
     </description>
    </property>
    <property name="standardInput" type="java.io.InputStream">
        <description>
     * Returns the standard input stream for the process executing the command. The stream is closed after the process
     * completes. Defaults to an empty stream.
     *
     * @return The standard input stream.
     </description>
    </property>
    <property name="standardOutput" type="java.io.OutputStream">
        <description>
     * Returns the output stream to consume standard output from the process executing the command. Defaults to {@code
     * System.out}.
     *
     * @return The output stream
     </description>
    </property>
</type>
