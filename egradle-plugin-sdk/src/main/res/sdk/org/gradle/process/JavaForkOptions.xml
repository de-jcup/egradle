<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.process.JavaForkOptions" version="3.0">
    <description> &lt;p&gt;Specifies the options to use to fork a Java process.&lt;/p&gt;

</description>
    <method name="bootstrapClasspath" returnType="org.gradle.process.JavaForkOptions">
        <description> Adds the given values to the end of the bootstrap classpath for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;classpath The classpath.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this

</description>
        <parameter type="java.lang.Object" name="classpath"/>
    </method>
    <method name="copyTo" returnType="org.gradle.process.JavaForkOptions">
        <description> Copies these options to the given options.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;options The target options.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this

</description>
        <parameter type="org.gradle.process.JavaForkOptions" name="options"/>
    </method>
    <method name="getAllJvmArgs" returnType="java.util.List">
        <description> Returns the full set of arguments to use to launch the JVM for the process. This includes arguments to define
 system properties, the minimum/maximum heap size, and the bootstrap classpath.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The arguments. Returns an empty list if there are no arguments.

</description>
    </method>
    <method name="getBootstrapClasspath" returnType="org.gradle.api.file.FileCollection">
        <description> Returns the bootstrap classpath to use for the process. The default bootstrap classpath for the JVM is used when
 this classpath is empty.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The bootstrap classpath. Never returns null.

</description>
    </method>
    <method name="getDebug" returnType="boolean">
        <description> Returns true if debugging is enabled for the process. When enabled, the process is started suspended and
 listening on port 5005.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;true when debugging is enabled, false to disable.

</description>
    </method>
    <method name="getDefaultCharacterEncoding" returnType="java.lang.String">
        <description> Returns the default character encoding to use.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The default character encoding. Returns null if the &lt;a href='type://java.nio.charset.Charset#defaultCharset() default character encoding of this JVM'&gt;java.nio.charset.Charset#defaultCharset() default character encoding of this JVM&lt;/a&gt; should be used.

</description>
    </method>
    <method name="getEnableAssertions" returnType="boolean">
        <description> Returns true if assertions are enabled for the process.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;true if assertions are enabled, false if disabled

</description>
    </method>
    <method name="getJvmArgs" returnType="java.util.List">
        <description> Returns the extra arguments to use to launch the JVM for the process. Does not include system properties and the
 minimum/maximum heap size.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The arguments. Returns an empty list if there are no arguments.

</description>
    </method>
    <method name="getMaxHeapSize" returnType="java.lang.String">
        <description> Returns the maximum heap size for the process, if any.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The maximum heap size. Returns null if the default maximum heap size should be used.

</description>
    </method>
    <method name="getMinHeapSize" returnType="java.lang.String">
        <description> Returns the minimum heap size for the process, if any.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The minimum heap size. Returns null if the default minimum heap size should be used.

</description>
    </method>
    <method name="getSystemProperties" returnType="java.util.Map">
        <description> Returns the system properties which will be used for the process.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The system properties. Returns an empty map when there are no system properties.

</description>
    </method>
    <method name="jvmArgs" returnType="org.gradle.process.JavaForkOptions">
        <description> Adds some arguments to use to launch the JVM for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;arguments The arguments. Must not be null.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this

</description>
        <parameter type="java.lang.Iterable" name="arguments"/>
    </method>
    <method name="jvmArgs" returnType="org.gradle.process.JavaForkOptions">
        <description> Adds some arguments to use to launch the JVM for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;arguments The arguments.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this

</description>
        <parameter type="java.lang.Object" name="arguments"/>
    </method>
    <method name="setAllJvmArgs" returnType="void">
        <description> Sets the full set of arguments to use to launch the JVM for the process. Overwrites any previously set system
 properties, minimum/maximum heap size, assertions, and bootstrap classpath.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;arguments The arguments. Must not be null.

</description>
        <parameter type="java.lang.Iterable" name="arguments"/>
    </method>
    <method name="setBootstrapClasspath" returnType="void">
        <description> Sets the bootstrap classpath to use for the process. Set to an empty classpath to use the default bootstrap
 classpath for the specified JVM.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;classpath The classpath. Must not be null. Can be empty.

</description>
        <parameter type="org.gradle.api.file.FileCollection" name="classpath"/>
    </method>
    <method name="setDebug" returnType="void">
        <description> Enable or disable debugging for the process. When enabled, the process is started suspended and listening on port
 5005.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;enabled true to enable debugging, false to disable.

</description>
        <parameter type="boolean" name="enabled"/>
    </method>
    <method name="setDefaultCharacterEncoding" returnType="void">
        <description> Sets the default character encoding to use.

 Note: Many JVM implementations support the setting of this attribute via system property on startup (namely, the &lt;a href='type://file.encoding'&gt;file.encoding&lt;/a&gt; property). For JVMs
 where this is the case, setting the &lt;a href='type://file.encoding'&gt;file.encoding&lt;/a&gt; property via &lt;a href='type://org.gradle.process.JavaForkOptions#setSystemProperties(java.util.Map)'&gt;#setSystemProperties(java.util.Map)&lt;/a&gt; or similar will have no effect as
 this value will be overridden by the value specified by &lt;a href='type://org.gradle.process.JavaForkOptions#getDefaultCharacterEncoding()'&gt;#getDefaultCharacterEncoding()&lt;/a&gt;.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;defaultCharacterEncoding The default character encoding. Use null to use &lt;a href='type://java.nio.charset.Charset#defaultCharset() this JVM's default charset'&gt;java.nio.charset.Charset#defaultCharset() this JVM's default charset&lt;/a&gt;

</description>
        <parameter type="java.lang.String" name="defaultCharacterEncoding"/>
    </method>
    <method name="setEnableAssertions" returnType="void">
        <description> Enable or disable assertions for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;enabled true to enable assertions, false to disable.

</description>
        <parameter type="boolean" name="enabled"/>
    </method>
    <method name="setJvmArgs" returnType="void">
        <description> Sets the extra arguments to use to launch the JVM for the process. System properties
 and minimum/maximum heap size are updated.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;arguments The arguments. Must not be null.

</description>
        <parameter type="java.lang.Iterable" name="arguments"/>
    </method>
    <method name="setMaxHeapSize" returnType="void">
        <description> Sets the maximum heap size for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;heapSize The heap size. Use null for the default maximum heap size.

</description>
        <parameter type="java.lang.String" name="heapSize"/>
    </method>
    <method name="setMinHeapSize" returnType="void">
        <description> Sets the minimum heap size for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;heapSize The minimum heap size. Use null for the default minimum heap size.

</description>
        <parameter type="java.lang.String" name="heapSize"/>
    </method>
    <method name="setSystemProperties" returnType="void">
        <description> Sets the system properties to use for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;properties The system properties. Must not be null.

</description>
        <parameter type="java.util.Map" name="properties"/>
    </method>
    <method name="systemProperties" returnType="org.gradle.process.JavaForkOptions">
        <description> Adds some system properties to use for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;properties The system properties. Must not be null.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this

</description>
        <parameter type="java.util.Map" name="properties"/>
    </method>
    <method name="systemProperty" returnType="org.gradle.process.JavaForkOptions">
        <description> Adds a system property to use for the process.

 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name The name of the property
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;value The value for the property. May be null.
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this

</description>
        <parameter type="java.lang.String" name="name"/>
        <parameter type="java.lang.Object" name="value"/>
    </method>
    <interface name="org.gradle.process.ProcessForkOptions"/>
    <property name="allJvmArgs" type="java.util.List">
        <description> Returns the full set of arguments to use to launch the JVM for the process. This includes arguments to define
 system properties, the minimum/maximum heap size, and the bootstrap classpath.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The arguments. Returns an empty list if there are no arguments.

</description>
    </property>
    <property name="bootstrapClasspath" type="org.gradle.api.file.FileCollection">
        <description> Returns the bootstrap classpath to use for the process. The default bootstrap classpath for the JVM is used when
 this classpath is empty.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The bootstrap classpath. Never returns null.

</description>
    </property>
    <property name="debug" type="boolean">
        <description> Returns true if debugging is enabled for the process. When enabled, the process is started suspended and
 listening on port 5005.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;true when debugging is enabled, false to disable.

</description>
    </property>
    <property name="defaultCharacterEncoding" type="java.lang.String">
        <description> Returns the default character encoding to use.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The default character encoding. Returns null if the &lt;a href='type://java.nio.charset.Charset#defaultCharset() default character encoding of this JVM'&gt;java.nio.charset.Charset#defaultCharset() default character encoding of this JVM&lt;/a&gt; should be used.

</description>
    </property>
    <property name="enableAssertions" type="boolean">
        <description> Returns true if assertions are enabled for the process.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;true if assertions are enabled, false if disabled

</description>
    </property>
    <property name="jvmArgs" type="java.util.List">
        <description> Returns the extra arguments to use to launch the JVM for the process. Does not include system properties and the
 minimum/maximum heap size.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The arguments. Returns an empty list if there are no arguments.

</description>
    </property>
    <property name="maxHeapSize" type="java.lang.String">
        <description> Returns the maximum heap size for the process, if any.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The maximum heap size. Returns null if the default maximum heap size should be used.

</description>
    </property>
    <property name="minHeapSize" type="java.lang.String">
        <description> Returns the minimum heap size for the process, if any.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The minimum heap size. Returns null if the default minimum heap size should be used.

</description>
    </property>
    <property name="systemProperties" type="java.util.Map">
        <description> Returns the system properties which will be used for the process.

 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The system properties. Returns an empty map when there are no system properties.

</description>
    </property>
</type>
