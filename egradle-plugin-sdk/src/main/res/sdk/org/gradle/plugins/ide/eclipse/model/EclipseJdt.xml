<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type language="gradle" name="org.gradle.plugins.ide.eclipse.model.EclipseJdt" version="3.0" documented="true">
    <description>
 * Enables fine-tuning jdt details of the Eclipse plugin
 *
 * &lt;pre autoTested=''&gt;
 * apply plugin: 'java'
 * apply plugin: 'eclipse'
 *
 * eclipse {
 *   jdt {
 *     //if you want to alter the java versions (by default they are configured with gradle java plugin settings):
 *     sourceCompatibility = 1.6
 *     targetCompatibility = 1.5
 *     javaRuntimeName = "J2SE-1.5"
 *
 *     file {
 *       //whenMerged closure is the highest voodoo
 *       //and probably should be used only to solve tricky edge cases.
 *       //the type passed to the closure is {@link Jdt}
 *
 *       //closure executed after jdt file content is loaded from existing file
 *       //and after gradle build information is merged
 *       whenMerged { jdt
 *         //you can tinker with the {@link Jdt} here
 *       }
 *
 *       //withProperties allows addition of properties not currently
 *       //modeled by Gradle
 *       withProperties { properties -&gt;
 *           //you can tinker with the {@link java.util.Properties} here
 *       }
 *     }
 *   }
 * }
 * &lt;/pre&gt;
 </description>
    <method name="file" returnType="void" delegationTarget="org.gradle.plugins.ide.api.PropertiesFileContentMerger" documented="true">
        <description>
     * Enables advanced configuration like affecting the way existing jdt file content
     * is merged with gradle build information
     * &lt;p&gt;
     * The object passed to whenMerged{} and beforeMerged{} closures is of type {@link Jdt}
     * &lt;p&gt;
     * The object passed to withProperties{} closures is of type {@link java.util.Properties}
     * &lt;p&gt;
     * For example see docs for {@link EclipseJdt}
     </description>
        <parameter type="groovy.lang.Closure" name="closure"/>
    </method>
    <method name="getFile" returnType="org.gradle.plugins.ide.api.PropertiesFileContentMerger">
        <description>
     * See {@link #file(Closure) }
     </description>
    </method>
    <method name="getJavaRuntimeName" returnType="java.lang.String">
        <description>
     * The name of the Java Runtime to use.
     * &lt;p&gt;
     * For example see docs for {@link EclipseJdt}
     </description>
    </method>
    <method name="getSourceCompatibility" returnType="org.gradle.api.JavaVersion">
        <description>
     * The source Java language level.
     * &lt;p&gt;
     * For example see docs for {@link EclipseJdt}
     </description>
    </method>
    <method name="getTargetCompatibility" returnType="org.gradle.api.JavaVersion">
        <description>
     * The target JVM to generate {@code .class} files for.
     * &lt;p&gt;
     * For example see docs for {@link EclipseJdt}
     </description>
    </method>
    <method name="setJavaRuntimeName" returnType="void">
        <parameter type="java.lang.String" name="javaRuntimeName"/>
    </method>
    <method name="setSourceCompatibility" returnType="void">
        <parameter type="java.lang.Object" name="sourceCompatibility"/>
    </method>
    <method name="setTargetCompatibility" returnType="void">
        <parameter type="java.lang.Object" name="targetCompatibility"/>
    </method>
    <property name="file" type="org.gradle.plugins.ide.api.PropertiesFileContentMerger" documented="true">
        <description>
     * See {@link #file(Closure) }
     </description>
    </property>
    <property name="javaRuntimeName" type="java.lang.String">
        <description>
     * The name of the Java Runtime to use.
     * &lt;p&gt;
     * For example see docs for {@link EclipseJdt}
     </description>
    </property>
    <property name="sourceCompatibility" type="org.gradle.api.JavaVersion" documented="true">
        <description>
     * The source Java language level.
     * &lt;p&gt;
     * For example see docs for {@link EclipseJdt}
     </description>
    </property>
    <property name="targetCompatibility" type="org.gradle.api.JavaVersion" documented="true">
        <description>
     * The target JVM to generate {@code .class} files for.
     * &lt;p&gt;
     * For example see docs for {@link EclipseJdt}
     </description>
    </property>
</type>
