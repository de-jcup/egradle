<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type language="gradle" name="org.gradle.plugins.ide.eclipse.model.EclipseModel" version="3.0" documented="true">
    <description>
 * DSL-friendly model of the Eclipse project information.
 * First point of entry for customizing Eclipse project generation.
 *
 * &lt;pre autoTested=''&gt;
 * apply plugin: 'java'
 * apply plugin: 'eclipse'
 * apply plugin: 'eclipse-wtp' //for web projects only
 *
 * eclipse {
 *   pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')
 *
 *   project {
 *     //see docs for {@link EclipseProject}
 *   }
 *
 *   classpath {
 *     //see docs for {@link EclipseClasspath}
 *   }
 *
 *   wtp {
 *     //see docs for {@link EclipseWtp}
 *   }
 * }
 * &lt;/pre&gt;
 *
 * More examples in docs for {@link EclipseProject}, {@link EclipseClasspath}, {@link EclipseWtp}
 </description>
    <method name="classpath" returnType="void" delegationTarget="org.gradle.plugins.ide.eclipse.model.EclipseClasspath" documented="true">
        <description>
     * Configures eclipse classpath information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseClasspath}
     *
     * @param closure
     </description>
        <parameter type="groovy.lang.Closure" name="closure"/>
    </method>
    <method name="getClasspath" returnType="org.gradle.plugins.ide.eclipse.model.EclipseClasspath">
        <description>
     * Configures eclipse classpath information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseClasspath}
     </description>
    </method>
    <method name="getJdt" returnType="org.gradle.plugins.ide.eclipse.model.EclipseJdt">
        <description>
     * Configures eclipse java compatibility information (jdt)
     * &lt;p&gt;
     * For examples see docs for {@link EclipseProject}
     </description>
    </method>
    <method name="getProject" returnType="org.gradle.plugins.ide.eclipse.model.EclipseProject">
        <description>
     * Configures eclipse project information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseProject}
     </description>
    </method>
    <method name="getWtp" returnType="org.gradle.plugins.ide.eclipse.model.EclipseWtp">
        <description>
     * Configures eclipse wtp information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseWtp}
     </description>
    </method>
    <method name="jdt" returnType="void" delegationTarget="org.gradle.plugins.ide.eclipse.model.EclipseJdt" documented="true">
        <description>
     * Configures eclipse java compatibility information (jdt)
     * &lt;p&gt;
     * For examples see docs for {@link EclipseProject}
     *
     * @param closure
     </description>
        <parameter type="groovy.lang.Closure" name="closure"/>
    </method>
    <method name="pathVariables" returnType="void" documented="true">
        <description>
     * Adds path variables to be used for replacing absolute paths in classpath entries.
     * &lt;p&gt;
     * If the beginning of the absolute path of a library or other path-related element matches a value of a variable,
     * a variable entry is used. The matching part of the library path is replaced with the variable name.
     * &lt;p&gt;
     * For example see docs for {@link EclipseModel}
     *
     * @param pathVariables A map with String-&gt;File pairs.
     </description>
        <parameter type="java.util.Map" name="pathVariables"/>
    </method>
    <method name="project" returnType="void" delegationTarget="org.gradle.plugins.ide.eclipse.model.EclipseProject" documented="true">
        <description>
     * Configures eclipse project information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseProject}
     *
     * @param closure
     </description>
        <parameter type="groovy.lang.Closure" name="closure"/>
    </method>
    <method name="setClasspath" returnType="void">
        <parameter type="org.gradle.plugins.ide.eclipse.model.EclipseClasspath" name="classpath"/>
    </method>
    <method name="setJdt" returnType="void">
        <parameter type="org.gradle.plugins.ide.eclipse.model.EclipseJdt" name="jdt"/>
    </method>
    <method name="setProject" returnType="void">
        <parameter type="org.gradle.plugins.ide.eclipse.model.EclipseProject" name="project"/>
    </method>
    <method name="setWtp" returnType="void">
        <parameter type="org.gradle.plugins.ide.eclipse.model.EclipseWtp" name="wtp"/>
    </method>
    <method name="wtp" returnType="void" delegationTarget="org.gradle.plugins.ide.eclipse.model.EclipseWtp" documented="true">
        <description>
     * Configures eclipse wtp information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseWtp}
     *
     * @param closure
     </description>
        <parameter type="groovy.lang.Closure" name="closure"/>
    </method>
    <property name="classpath" type="org.gradle.plugins.ide.eclipse.model.EclipseClasspath" documented="true">
        <description>
     * Configures eclipse classpath information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseClasspath}
     </description>
    </property>
    <property name="jdt" type="org.gradle.plugins.ide.eclipse.model.EclipseJdt" documented="true">
        <description>
     * Configures eclipse java compatibility information (jdt)
     * &lt;p&gt;
     * For examples see docs for {@link EclipseProject}
     </description>
    </property>
    <property name="project" type="org.gradle.plugins.ide.eclipse.model.EclipseProject" documented="true">
        <description>
     * Configures eclipse project information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseProject}
     </description>
    </property>
    <property name="wtp" type="org.gradle.plugins.ide.eclipse.model.EclipseWtp" documented="true">
        <description>
     * Configures eclipse wtp information
     * &lt;p&gt;
     * For examples see docs for {@link EclipseWtp}
     </description>
    </property>
</type>
