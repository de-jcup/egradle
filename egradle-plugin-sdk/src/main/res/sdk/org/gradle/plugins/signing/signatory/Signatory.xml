<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.plugins.signing.signatory.Signatory" version="3.0">
    <description> 
 A signatory is an object capable of providing a signature for an arbitrary stream of bytes. 
</description>
    <method name="getName" returnType="java.lang.String">
        <description> 
 &lt;p&gt;An identifying name for this signatory.&lt;/p&gt; 
 
 &lt;p&gt;The name must be constant for the life of the signatory and should uniquely identify it within a project.&lt;/p&gt; 
</description>
    </method>
    <method name="sign" returnType="byte" delegationTarget="toSign">
        <description> 
 Exhausts &lt;a href='type://toSign'&gt;toSign&lt;/a&gt;, and returns the raw signature bytes. 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;toSign The source of the data to be signed 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The raw bytes of the signature 
</description>
        <parameter type="java.io.InputStream" name="toSign"/>
    </method>
    <method name="sign" returnType="void" delegationTarget="toSign">
        <description> 
 Exhausts &lt;a href='type://toSign'&gt;toSign&lt;/a&gt;, and writes the signature to &lt;a href='type://signatureDestination'&gt;signatureDestination&lt;/a&gt;. The caller is responsible for closing the streams, though the output WILL be flushed. 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;toSign The source of the data to be signed 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;destination Where the signature will be written to 
</description>
        <parameter type="java.io.InputStream" name="toSign"/>
        <parameter type="java.io.OutputStream" name="destination"/>
    </method>
    <property name="name" type="java.lang.String">
        <description> 
 &lt;p&gt;An identifying name for this signatory.&lt;/p&gt; 
 
 &lt;p&gt;The name must be constant for the life of the signatory and should uniquely identify it within a project.&lt;/p&gt; 
</description>
    </property>
</type>
