<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="false" language="gradle" name="org.gradle.plugins.signing.signatory.pgp.PgpSignatory" version="3.0" superType="org.gradle.plugins.signing.signatory.SignatorySupport">
    <description> 
 PGP signatory from PGP key and password. 
</description>
    <method name="createPrivateKey" returnType="org.bouncycastle.openpgp.PGPPrivateKey">
        <parameter type="org.bouncycastle.openpgp.PGPSecretKey" name="secretKey"/>
        <parameter type="java.lang.String" name="password"/>
    </method>
    <method name="createSignatureGenerator" returnType="org.bouncycastle.openpgp.PGPSignatureGenerator"/>
    <method name="feedGeneratorWith" returnType="void">
        <parameter type="java.io.InputStream" name="toSign"/>
        <parameter type="org.bouncycastle.openpgp.PGPSignatureGenerator" name="generator"/>
    </method>
    <method name="getKeyId" returnType="org.gradle.plugins.signing.signatory.pgp.PgpKeyId"/>
    <method name="getName" returnType="java.lang.String"/>
    <method name="sign" returnType="void" delegationTarget="toSign">
        <description> 
 Exhausts &lt;a href='type://toSign'&gt;toSign&lt;/a&gt;, and writes the signature to &lt;a href='type://signatureDestination'&gt;signatureDestination&lt;/a&gt;. 
 
 The caller is responsible for closing the streams, though the output WILL be flushed. 
</description>
        <parameter type="java.io.InputStream" name="toSign"/>
        <parameter type="java.io.OutputStream" name="signatureDestination"/>
    </method>
    <method name="writeSignatureTo" returnType="void">
        <parameter type="java.io.OutputStream" name="signatureDestination"/>
        <parameter type="org.bouncycastle.openpgp.PGPSignature" name="pgpSignature"/>
    </method>
    <property name="keyId" type="org.gradle.plugins.signing.signatory.pgp.PgpKeyId"/>
    <property name="name" type="java.lang.String"/>
</type>
