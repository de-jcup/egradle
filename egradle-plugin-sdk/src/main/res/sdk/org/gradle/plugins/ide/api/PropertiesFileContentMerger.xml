<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type language="gradle" name="org.gradle.plugins.ide.api.PropertiesFileContentMerger" version="3.0" superType="org.gradle.plugins.ide.api.FileContentMerger" documented="true">
    <description>
 * Models the generation/parsing/merging capabilities.
 * Adds properties-related hooks.
 * &lt;p&gt;
 * For examples see docs for {@link org.gradle.plugins.ide.eclipse.model.EclipseJdt} and others.
 </description>
    <method name="getTransformer" returnType="org.gradle.api.internal.PropertiesTransformer"/>
    <method name="setTransformer" returnType="void">
        <parameter type="org.gradle.api.internal.PropertiesTransformer" name="transformer"/>
    </method>
    <method name="withProperties" returnType="void" documented="true">
        <description>
     * Adds a closure to be called when the file has been created.
     * The {@link Properties} are passed to the closure as a parameter.
     * The closure can modify the Properties before they are written to the output file.
     * &lt;p&gt;
     * For examples see docs for {@link org.gradle.plugins.ide.eclipse.model.EclipseJdt} and others.
     *
     * @param closure The closure to execute when the Properties have been created.
     </description>
        <parameter type="groovy.lang.Closure" name="closure"/>
    </method>
    <method name="withProperties" returnType="void" documented="true">
        <description>
     * Adds an action to be called when the file has been created.
     * The {@link Properties} are passed to the action as a parameter.
     * The action can modify the Properties before they are written to the output file.
     * &lt;p&gt;
     * For examples see docs for {@link org.gradle.plugins.ide.eclipse.model.EclipseJdt} and others.
     *
     * @param action The action to execute when the Properties have been created.
     </description>
        <parameter type="org.gradle.api.Action" name="action"/>
    </method>
    <property name="transformer" type="org.gradle.api.internal.PropertiesTransformer"/>
</type>
