<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<type interface="true" language="gradle" name="org.gradle.tooling.model.gradle.BuildInvocations" version="3.0">
    <description>
 * A model providing access to {@link org.gradle.tooling.model.Launchable} instances that can be used
 * to initiate Gradle build.
 *
 * &lt;p&gt;To launch a build, you pass one or more {@link org.gradle.tooling.model.Launchable} instances
 * to either {@link org.gradle.tooling.BuildLauncher#forTasks(Iterable)} or {@link org.gradle.tooling.BuildLauncher#forLaunchables(Iterable)}.&lt;/p&gt;
 *
 * @since 1.12
 </description>
    <method name="getProjectIdentifier" returnType="org.gradle.tooling.model.ProjectIdentifier">
        <description>
     * Returns the identifier for the Gradle project that these invocations originate from.
     *
     * @since 2.13
     </description>
    </method>
    <method name="getTaskSelectors" returnType="org.gradle.tooling.model.DomainObjectSet">
        <description>
     * Returns tasks selectors that can be used to execute a build.
     *
     * Selector is a {@link org.gradle.tooling.model.Launchable} that requests to build all tasks with a given name in context of some project and all its subprojects.
     * @return The task selectors.
     * @since 1.12
     </description>
    </method>
    <method name="getTasks" returnType="org.gradle.tooling.model.DomainObjectSet">
        <description>
     * Returns the tasks that can be used to execute a build.
     *
     * @return The tasks.
     * @since 1.12
     </description>
    </method>
    <interface name="org.gradle.tooling.model.Model"/>
    <interface name="org.gradle.tooling.model.ProjectModel"/>
    <property name="projectIdentifier" type="org.gradle.tooling.model.ProjectIdentifier">
        <description>
     * Returns the identifier for the Gradle project that these invocations originate from.
     *
     * @since 2.13
     </description>
    </property>
    <property name="taskSelectors" type="org.gradle.tooling.model.DomainObjectSet">
        <description>
     * Returns tasks selectors that can be used to execute a build.
     *
     * Selector is a {@link org.gradle.tooling.model.Launchable} that requests to build all tasks with a given name in context of some project and all its subprojects.
     * @return The task selectors.
     * @since 1.12
     </description>
    </property>
    <property name="tasks" type="org.gradle.tooling.model.DomainObjectSet">
        <description>
     * Returns the tasks that can be used to execute a build.
     *
     * @return The tasks.
     * @since 1.12
     </description>
    </property>
</type>
