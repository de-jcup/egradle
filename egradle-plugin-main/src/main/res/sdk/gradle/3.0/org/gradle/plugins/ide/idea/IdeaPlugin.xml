<?xml version="1.0" encoding="UTF-8" standalone="yes"?><type interface="false" language="gradle" name="org.gradle.plugins.ide.idea.IdeaPlugin" version="3.0"><description> 
 Adds a GenerateIdeaModule task. When applied to a root project, also adds a GenerateIdeaProject task. For projects that have the Java plugin applied, the tasks receive additional Java-specific 
 configuration. 
</description><method name="call" returnType="java.util.Map"/><method name="call" returnType="org.gradle.plugins.ide.idea.model.IdeaLanguageLevel"/><method name="execute" returnType="void"><parameter type="org.gradle.api.plugins.scala.ScalaBasePlugin" name="scalaBasePlugin"/></method><method name="call" returnType="java.lang.String"/><method name="getLifecycleTaskName" returnType="java.lang.String"/><method name="performPostEvaluationActions" returnType="void"/><method name="call" returnType="org.gradle.plugins.ide.idea.model.IdeaLanguageLevel"/><method name="apply" returnType="boolean"><parameter type="org.gradle.api.Project" name="project"/></method><method name="getMaxJavaModuleCompatibilityVersionFor" returnType="org.gradle.api.JavaVersion"><parameter type="com.google.common.base.Function" name="toJavaVersion"/></method><method name="apply" returnType="org.gradle.api.JavaVersion"><parameter type="org.gradle.api.Project" name="p"/></method><method name="call" returnType="java.util.Set"/><method name="apply" returnType="boolean"><parameter type="org.gradle.api.Project" name="p"/></method><method name="configureForJavaPlugin" returnType="org.gradle.api.DomainObjectCollection"><parameter type="org.gradle.api.Project" name="project"/></method><method name="ideaModuleDependsOnRoot" returnType="void"/><method name="call" returnType="org.gradle.plugins.ide.idea.model.PathFactory"/><method name="configureIdeaWorkspace" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="call" returnType="java.util.Set"/><method name="createImlArtifact" returnType="org.gradle.internal.component.model.ComponentArtifactMetadata"><parameter type="org.gradle.api.artifacts.component.ProjectComponentIdentifier" name="projectId"/><parameter type="org.gradle.api.Project" name="project"/></method><method name="configureIdeaProject" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="getModel" returnType="org.gradle.plugins.ide.idea.model.IdeaModel"/><method name="configureIdeaModule" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="isRoot" returnType="boolean"><parameter type="org.gradle.api.Project" name="project"/></method><method name="includeModuleLanguageLevelOverride" returnType="boolean"><parameter type="org.gradle.api.Project" name="rootProject"/><parameter type="org.gradle.plugins.ide.idea.model.IdeaLanguageLevel" name="moduleLanguageLevel"/></method><method name="call" returnType="org.gradle.api.JavaVersion"/><method name="onApply" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="call" returnType="java.util.Set"/><method name="execute" returnType="void"><parameter type="org.gradle.language.scala.plugins.ScalaLanguagePlugin" name="scalaLanguagePlugin"/></method><method name="includeModuleBytecodeLevelOverride" returnType="boolean"><parameter type="org.gradle.api.Project" name="rootProject"/><parameter type="org.gradle.api.JavaVersion" name="moduleTargetBytecodeLevel"/></method><method name="addScope" returnType="void"><parameter type="java.lang.String" name="name"/><parameter type="java.util.LinkedHashMap" name="scopes"/></method><method name="configureIdeaModuleForJava" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="apply" returnType="org.gradle.plugins.ide.idea.model.IdeaModule"><parameter type="org.gradle.api.Project" name="p"/></method><method name="call" returnType="org.gradle.plugins.ide.idea.model.PathFactory"/><method name="configureForScalaPlugin" returnType="void"/><method name="call" returnType="org.gradle.api.JavaVersion"/><method name="apply" returnType="boolean"><parameter type="org.gradle.api.Project" name="project"/></method><method name="call" returnType="java.util.List"/><method name="apply" returnType="org.gradle.api.JavaVersion"><parameter type="org.gradle.api.Project" name="p"/></method><method name="call" returnType="java.util.Set"/><method name="execute" returnType="void"><parameter type="org.gradle.plugins.ide.idea.GenerateIdeaModule" name="ideaModule"/></method><method name="call" returnType="java.util.Set"/><method name="makeSureModuleNamesAreUnique" returnType="void"/><method name="call" returnType="org.gradle.api.file.FileCollection"/><method name="execute" returnType="void"><parameter type="org.gradle.api.plugins.JavaPlugin" name="javaPlugin"/></method><method name="call" returnType="java.lang.String"/><method name="registerImlArtifacts" returnType="void"/><method name="call" returnType="java.io.File"/><method name="execute" returnType="void"><parameter type="org.gradle.api.invocation.Gradle" name="gradle"/></method><method name="ideaModelFor" returnType="org.gradle.plugins.ide.idea.model.IdeaModel"><parameter type="org.gradle.api.Project" name="project"/></method><property name="model" type="org.gradle.plugins.ide.idea.model.IdeaModel"/><property name="root" type="boolean"/><property name="maxJavaModuleCompatibilityVersionFor" type="org.gradle.api.JavaVersion"/><property name="lifecycleTaskName" type="java.lang.String"/></type>