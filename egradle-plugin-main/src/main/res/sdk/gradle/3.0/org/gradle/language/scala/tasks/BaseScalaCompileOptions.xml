<?xml version="1.0" encoding="UTF-8" standalone="yes"?><type interface="false" language="gradle" name="org.gradle.language.scala.tasks.BaseScalaCompileOptions" version="3.0" superType="org.gradle.api.tasks.compile.AbstractOptions"><description> 
 Options for Scala platform compilation. 
</description><method name="setOptimize" returnType="void"><parameter type="boolean" name="optimize"/></method><method name="setLoggingLevel" returnType="void"><parameter type="java.lang.String" name="loggingLevel"/></method><method name="isDeprecation" returnType="boolean"><description> 
 Generate deprecation information. 
</description></method><method name="getForkOptions" returnType="org.gradle.api.tasks.scala.ScalaForkOptions"><description> 
 Options for running the Scala compiler in a separate process. 
</description></method><method name="setUnchecked" returnType="void"><parameter type="boolean" name="unchecked"/></method><method name="getEncoding" returnType="java.lang.String"><description> 
 Encoding of source files. 
</description></method><method name="setListFiles" returnType="void"><parameter type="boolean" name="listFiles"/></method><method name="isFailOnError" returnType="boolean"><description> 
 Fail the build on compilation errors. 
</description></method><method name="setLoggingPhases" returnType="void"><parameter type="java.util.List" name="loggingPhases"/></method><method name="isOptimize" returnType="boolean"><description> 
 Run optimizations. 
</description></method><method name="setFailOnError" returnType="void"><parameter type="boolean" name="failOnError"/></method><method name="getLoggingLevel" returnType="java.lang.String"><description> 
 Specifies the amount of logging. 
 Legal values:  none, verbose, debug 
</description></method><method name="setAdditionalParameters" returnType="void"><parameter type="java.util.List" name="additionalParameters"/></method><method name="setEncoding" returnType="void"><parameter type="java.lang.String" name="encoding"/></method><method name="isForce" returnType="boolean"><description> 
 Whether to force the compilation of all files. 
 Legal values: 
 - false (only compile modified files) 
 - true (always recompile all files) 
</description></method><method name="getAdditionalParameters" returnType="java.util.List"><description> 
 Additional parameters passed to the compiler. 
 Each parameter must start with '-'. 
</description></method><method name="getLoggingPhases" returnType="java.util.List"><description> 
 Phases of the compiler to log. 
 Legal values: namer, typer, pickler, uncurry, tailcalls, transmatch, explicitouter, erasure, 
               lambdalift, flatten, constructors, mixin, icode, jvm, terminal. 
</description></method><method name="setForce" returnType="void"><parameter type="boolean" name="force"/></method><method name="setIncrementalOptions" returnType="void"><parameter type="org.gradle.api.tasks.scala.IncrementalCompileOptions" name="incrementalOptions"/></method><method name="setDebugLevel" returnType="void"><parameter type="java.lang.String" name="debugLevel"/></method><method name="isUnchecked" returnType="boolean"><description> 
 Generate unchecked information. 
</description></method><method name="setForkOptions" returnType="void"><parameter type="org.gradle.api.tasks.scala.ScalaForkOptions" name="forkOptions"/></method><method name="getDebugLevel" returnType="java.lang.String"><description> 
 Generate debugging information. 
 Legal values: none, source, line, vars, notailcalls 
</description></method><method name="setDeprecation" returnType="void"><parameter type="boolean" name="deprecation"/></method><method name="getIncrementalOptions" returnType="org.gradle.api.tasks.scala.IncrementalCompileOptions"/><method name="isListFiles" returnType="boolean"><description> 
 List files to be compiled. 
</description></method><property name="deprecation" type="boolean"><description> 
 Generate deprecation information. 
</description></property><property name="failOnError" type="boolean"><description> 
 Fail the build on compilation errors. 
</description></property><property name="debugLevel" type="java.lang.String"><description> 
 Generate debugging information. 
 Legal values: none, source, line, vars, notailcalls 
</description></property><property name="encoding" type="java.lang.String"><description> 
 Encoding of source files. 
</description></property><property name="listFiles" type="boolean"><description> 
 List files to be compiled. 
</description></property><property name="forkOptions" type="org.gradle.api.tasks.scala.ScalaForkOptions"><description> 
 Options for running the Scala compiler in a separate process. 
</description></property><property name="loggingPhases" type="java.util.List"><description> 
 Phases of the compiler to log. 
 Legal values: namer, typer, pickler, uncurry, tailcalls, transmatch, explicitouter, erasure, 
               lambdalift, flatten, constructors, mixin, icode, jvm, terminal. 
</description></property><property name="incrementalOptions" type="org.gradle.api.tasks.scala.IncrementalCompileOptions"/><property name="force" type="boolean"><description> 
 Whether to force the compilation of all files. 
 Legal values: 
 - false (only compile modified files) 
 - true (always recompile all files) 
</description></property><property name="loggingLevel" type="java.lang.String"><description> 
 Specifies the amount of logging. 
 Legal values:  none, verbose, debug 
</description></property><property name="unchecked" type="boolean"><description> 
 Generate unchecked information. 
</description></property><property name="additionalParameters" type="java.util.List"><description> 
 Additional parameters passed to the compiler. 
 Each parameter must start with '-'. 
</description></property><property name="optimize" type="boolean"><description> 
 Run optimizations. 
</description></property></type>