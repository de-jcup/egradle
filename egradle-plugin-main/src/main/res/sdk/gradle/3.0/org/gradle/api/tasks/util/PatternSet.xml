<?xml version="1.0" encoding="UTF-8" standalone="yes"?><type interface="false" language="gradle" name="org.gradle.api.tasks.util.PatternSet" version="3.0"><description> 
 Standalone implementation of &lt;a href='type://PatternFilterable'&gt;PatternFilterable&lt;/a&gt;. 
</description><method name="getAsIncludeSpec" returnType="org.gradle.api.specs.Spec"/><method name="getAsExcludeSpec" returnType="org.gradle.api.specs.Spec"/><method name="include" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.String" name="includes"/></method><method name="include" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="org.gradle.api.specs.Spec" name="spec"/></method><method name="doCopyFrom" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="org.gradle.api.tasks.util.PatternSet" name="from"/></method><method name="exclude" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.Iterable" name="excludes"/></method><method name="intersect" returnType="org.gradle.api.tasks.util.PatternSet"/><method name="getIncludes" returnType="java.util.Set"/><method name="exclude" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="org.gradle.api.specs.Spec" name="spec"/></method><method name="getExcludeSpecs" returnType="java.util.Set"/><method name="getExcludes" returnType="java.util.Set"/><method name="isEmpty" returnType="boolean"><description> 
 The PatternSet is considered empty when no includes or excludes have been added. 
 
 The Spec returned by getAsSpec method only contains the default excludes patterns 
 in this case. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;true when no includes or excludes have been added to this instance 
</description></method><method name="getIncludeSpecs" returnType="java.util.Set"/><method name="getAsSpec" returnType="org.gradle.api.specs.Spec"/><method name="setExcludes" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.Iterable" name="excludes"/></method><method name="exclude" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.String" name="excludes"/></method><method name="copyFrom" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="org.gradle.api.tasks.util.PatternFilterable" name="sourcePattern"/></method><method name="hashCode" returnType="int"/><method name="addToAntBuilder" returnType="java.lang.Object"><parameter type="java.lang.Object" name="node"/><parameter type="java.lang.String" name="childNodeName"/></method><method name="isCaseSensitive" returnType="boolean"/><method name="equals" returnType="boolean"><parameter type="java.lang.Object" name="o"/></method><method name="exclude" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="groovy.lang.Closure" name="closure"/></method><method name="include" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.Iterable" name="includes"/></method><method name="setCaseSensitive" returnType="void"><parameter type="boolean" name="caseSensitive"/></method><method name="include" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="groovy.lang.Closure" name="closure"/></method><method name="setIncludes" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.Iterable" name="includes"/></method><method name="excludeSpecs" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.Iterable" name="excludes"/></method><method name="includeSpecs" returnType="org.gradle.api.tasks.util.PatternSet"><parameter type="java.lang.Iterable" name="includeSpecs"/></method><property name="asIncludeSpec" type="org.gradle.api.specs.Spec"/><property name="asExcludeSpec" type="org.gradle.api.specs.Spec"/><property name="caseSensitive" type="boolean"/><property name="asSpec" type="org.gradle.api.specs.Spec"/><property name="excludes" type="java.util.Set"/><property name="includes" type="java.util.Set"/><property name="excludeSpecs" type="java.util.Set"/><property name="includeSpecs" type="java.util.Set"/><property name="empty" type="boolean"><description> 
 The PatternSet is considered empty when no includes or excludes have been added. 
 
 The Spec returned by getAsSpec method only contains the default excludes patterns 
 in this case. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;true when no includes or excludes have been added to this instance 
</description></property></type>