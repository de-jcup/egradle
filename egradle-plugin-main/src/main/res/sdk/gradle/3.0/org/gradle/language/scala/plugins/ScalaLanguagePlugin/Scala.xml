<?xml version="1.0" encoding="UTF-8" standalone="yes"?><type interface="false" language="gradle" name="org.gradle.language.scala.plugins.ScalaLanguagePlugin.Scala" version="3.0"><method name="addSourceSetToCompile" returnType="void"><parameter type="org.gradle.language.scala.tasks.PlatformScalaCompile" name="compile"/><parameter type="org.gradle.language.base.LanguageSourceSet" name="sourceSet"/></method><method name="configureAdditionalTransform" returnType="void"><parameter type="org.gradle.api.Task" name="task"/><parameter type="org.gradle.language.base.LanguageSourceSet" name="sourceSet"/></method><method name="configureTask" returnType="void"><parameter type="org.gradle.api.Task" name="task"/><parameter type="org.gradle.platform.base.BinarySpec" name="binarySpec"/><parameter type="org.gradle.language.base.LanguageSourceSet" name="sourceSet"/><parameter type="org.gradle.internal.service.ServiceRegistry" name="serviceRegistry"/></method><method name="addSourceSetClasspath" returnType="void"><parameter type="org.gradle.language.scala.tasks.PlatformScalaCompile" name="compile"/><parameter type="org.gradle.language.scala.ScalaLanguageSourceSet" name="scalaLanguageSourceSet"/></method><method name="configureScalaTask" returnType="void"><parameter type="org.gradle.language.scala.tasks.PlatformScalaCompile" name="compile"/><parameter type="org.gradle.jvm.internal.JvmAssembly" name="assembly"/><parameter type="java.lang.String" name="description"/></method><method name="getTransformTask" returnType="org.gradle.language.base.internal.JointCompileTaskConfig"/><method name="getTaskPrefix" returnType="java.lang.String"/><method name="applyToBinary" returnType="boolean"><parameter type="org.gradle.platform.base.BinarySpec" name="binary"/></method><method name="getSourceSetType" returnType="java.lang.Class"/><method name="getBinaryTools" returnType="java.util.Map"/><method name="getTaskType" returnType="java.lang.Class"/><method name="getLanguageName" returnType="java.lang.String"/><method name="canTransform" returnType="boolean"><parameter type="org.gradle.language.base.LanguageSourceSet" name="candidate"/></method><method name="getOutputType" returnType="java.lang.Class"/><property name="binaryTools" type="java.util.Map"/><property name="taskType" type="java.lang.Class"/><property name="taskPrefix" type="java.lang.String"/><property name="outputType" type="java.lang.Class"/><property name="transformTask" type="org.gradle.language.base.internal.JointCompileTaskConfig"/><property name="sourceSetType" type="java.lang.Class"/><property name="languageName" type="java.lang.String"/></type>