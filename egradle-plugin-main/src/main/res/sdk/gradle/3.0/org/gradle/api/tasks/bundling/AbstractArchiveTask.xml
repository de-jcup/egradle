<?xml version="1.0" encoding="UTF-8" standalone="yes"?><type interface="false" language="gradle" name="org.gradle.api.tasks.bundling.AbstractArchiveTask" version="3.0" superType="org.gradle.api.tasks.AbstractCopyTask"><description> 
 &lt;a href='type://AbstractArchiveTask'&gt;AbstractArchiveTask&lt;/a&gt; is the base class for all archive tasks. 
</description><method name="setClassifier" returnType="void"><parameter type="java.lang.String" name="classifier"/></method><method name="getDestinationDir" returnType="java.io.File"><description> 
 Returns the directory where the archive is generated into. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the directory 
</description></method><method name="setArchiveName" returnType="void"><description> 
 Sets the archive name. 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;name the archive name. 
</description><parameter type="java.lang.String" name="name"/></method><method name="maybe" returnType="java.lang.String"><parameter type="java.lang.String" name="prefix"/><parameter type="java.lang.String" name="value"/></method><method name="setAppendix" returnType="void"><parameter type="java.lang.String" name="appendix"/></method><method name="getArchivePath" returnType="java.io.File" delegationTarget="destinationDir"><description> 
 The path where the archive is constructed. The path is simply the &lt;a href='type://destinationDir'&gt;destinationDir&lt;/a&gt; plus the &lt;a href='type://archiveName'&gt;archiveName&lt;/a&gt;. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;a File object with the path to the archive 
</description></method><method name="setBaseName" returnType="void"><parameter type="java.lang.String" name="baseName"/></method><method name="into" returnType="org.gradle.api.tasks.bundling.AbstractArchiveTask" delegationTarget="CopySpec"><description> 
 Creates and configures a child &lt;a href='type://CopySpec'&gt;CopySpec&lt;/a&gt; with a destination directory *inside* the archive for the files. 
 The destination is evaluated as per &lt;a href='type://org.gradle.api.Project#file(Object)'&gt;org.gradle.api.Project#file(Object)&lt;/a&gt;. 
 Don't mix it up with &lt;a href='type://AbstractArchiveTask#getDestinationDir()'&gt;#getDestinationDir()&lt;/a&gt; which specifies the output directory for the archive. 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;destPath destination directory *inside* the archive for the files 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;configureClosure The closure to use to configure the child &lt;a href='type://CopySpec'&gt;CopySpec&lt;/a&gt;. 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this 
</description><parameter type="java.lang.Object" name="destPath"/><parameter type="groovy.lang.Closure" name="configureClosure"/></method><method name="into" returnType="org.gradle.api.file.CopySpec" delegationTarget="CopySpec"><description> 
 Creates and configures a child &lt;a href='type://CopySpec'&gt;CopySpec&lt;/a&gt; with a destination directory *inside* the archive for the files. 
 The destination is evaluated as per &lt;a href='type://org.gradle.api.Project#file(Object)'&gt;org.gradle.api.Project#file(Object)&lt;/a&gt;. 
 Don't mix it up with &lt;a href='type://AbstractArchiveTask#getDestinationDir()'&gt;#getDestinationDir()&lt;/a&gt; which specifies the output directory for the archive. 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;destPath destination directory *inside* the archive for the files 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;copySpec The closure to use to configure the child &lt;a href='type://CopySpec'&gt;CopySpec&lt;/a&gt;. 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this 
</description><parameter type="java.lang.Object" name="destPath"/><parameter type="org.gradle.api.Action" name="copySpec"/></method><method name="into" returnType="org.gradle.api.tasks.bundling.AbstractArchiveTask"><description> 
 Specifies the destination directory *inside* the archive for the files. 
 The destination is evaluated as per &lt;a href='type://org.gradle.api.Project#file(Object)'&gt;org.gradle.api.Project#file(Object)&lt;/a&gt;. 
 Don't mix it up with &lt;a href='type://AbstractArchiveTask#getDestinationDir()'&gt;#getDestinationDir()&lt;/a&gt; which specifies the output directory for the archive. 
 
 &lt;br&gt;&lt;b class='param'&gt;param:&lt;/b&gt;destPath destination directory *inside* the archive for the files 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;this 
</description><parameter type="java.lang.Object" name="destPath"/></method><method name="setVersion" returnType="void"><parameter type="java.lang.String" name="version"/></method><method name="getClassifier" returnType="java.lang.String"><description> 
 Returns the classifier part of the archive name, if any. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The classifier. May be null. 
</description></method><method name="getAppendix" returnType="java.lang.String"><description> 
 Returns the appendix part of the archive name, if any. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the appendix. May be null 
</description></method><method name="getArchiveName" returnType="java.lang.String"><description> 
 Returns the archive name. If the name has not been explicitly set, the pattern for the name is: 
 &lt;code&gt;[baseName]-[appendix]-[version]-[classifier].[extension]&lt;/code&gt; 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the archive name. 
</description></method><method name="setExtension" returnType="void"><parameter type="java.lang.String" name="extension"/></method><method name="getBaseName" returnType="java.lang.String"><description> 
 Returns the base name of the archive. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the base name. 
</description></method><method name="getVersion" returnType="java.lang.String"><description> 
 Returns the version part of the archive name, if any. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the version. May be null. 
</description></method><method name="setDestinationDir" returnType="void"><parameter type="java.io.File" name="destinationDir"/></method><method name="getExtension" returnType="java.lang.String"><description> 
 Returns the extension part of the archive name. 
</description></method><property name="archivePath" type="java.io.File"><description> 
 The path where the archive is constructed. The path is simply the &lt;a href='type://destinationDir'&gt;destinationDir&lt;/a&gt; plus the &lt;a href='type://archiveName'&gt;archiveName&lt;/a&gt;. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;a File object with the path to the archive 
</description></property><property name="classifier" type="java.lang.String"><description> 
 Returns the classifier part of the archive name, if any. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;The classifier. May be null. 
</description></property><property name="archiveName" type="java.lang.String"><description> 
 Returns the archive name. If the name has not been explicitly set, the pattern for the name is: 
 &lt;code&gt;[baseName]-[appendix]-[version]-[classifier].[extension]&lt;/code&gt; 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the archive name. 
</description></property><property name="destinationDir" type="java.io.File"><description> 
 Returns the directory where the archive is generated into. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the directory 
</description></property><property name="version" type="java.lang.String"><description> 
 Returns the version part of the archive name, if any. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the version. May be null. 
</description></property><property name="appendix" type="java.lang.String"><description> 
 Returns the appendix part of the archive name, if any. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the appendix. May be null 
</description></property><property name="extension" type="java.lang.String"><description> 
 Returns the extension part of the archive name. 
</description></property><property name="baseName" type="java.lang.String"><description> 
 Returns the base name of the archive. 
 
 &lt;br&gt;&lt;br&gt;&lt;b class='return'&gt;returns:&lt;/b&gt;the base name. 
</description></property></type>