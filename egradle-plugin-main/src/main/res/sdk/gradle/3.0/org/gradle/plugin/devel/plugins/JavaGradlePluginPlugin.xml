<?xml version="1.0" encoding="UTF-8" standalone="yes"?><type interface="false" language="gradle" name="org.gradle.plugin.devel.plugins.JavaGradlePluginPlugin" version="3.0"><description> 
 A plugin for building java gradle plugins. Automatically generates plugin descriptors. Emits warnings for common error conditions. &lt;p&gt; Provides a direct integration with TestKit by declaring the 
 &lt;a href='type://gradleTestKit()'&gt;gradleTestKit()&lt;/a&gt; dependency for the test compile configuration and a dependency on the plugin classpath manifest generation task for the test runtime configuration. Default conventions can 
 be customized with the help of &lt;a href='type://GradlePluginDevelopmentExtension'&gt;GradlePluginDevelopmentExtension&lt;/a&gt;. 
 
 Integrates with the 'maven-publish' and 'ivy-publish' plugins to automatically publish the plugins so they can be resolved using the `pluginRepositories` and `plugins` DSL. 
</description><method name="call" returnType="java.io.File"/><method name="createExtension" returnType="org.gradle.plugin.devel.GradlePluginDevelopmentExtension"><parameter type="org.gradle.api.Project" name="project"/></method><method name="execute" returnType="void"><parameter type="org.gradle.api.plugins.AppliedPlugin" name="appliedPlugin"/></method><method name="call" returnType="java.io.File"/><method name="configurePublishing" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="call" returnType="java.lang.Object"/><method name="execute" returnType="void"><parameter type="org.gradle.api.plugins.AppliedPlugin" name="appliedPlugin"/></method><method name="establishTestKitAndPluginClasspathDependencies" returnType="void"><parameter type="org.gradle.api.Project" name="project"/><parameter type="org.gradle.plugin.devel.GradlePluginDevelopmentExtension" name="extension"/><parameter type="org.gradle.plugin.devel.tasks.PluginUnderTestMetadata" name="pluginClasspathTask"/></method><method name="createAndConfigurePluginUnderTestMetadataTask" returnType="org.gradle.plugin.devel.tasks.PluginUnderTestMetadata"><parameter type="org.gradle.api.Project" name="project"/><parameter type="org.gradle.plugin.devel.GradlePluginDevelopmentExtension" name="extension"/></method><method name="configureDescriptorGeneration" returnType="void"><parameter type="org.gradle.api.Project" name="project"/><parameter type="org.gradle.plugin.devel.GradlePluginDevelopmentExtension" name="extension"/></method><method name="validatePluginDeclarations" returnType="void"><parameter type="org.gradle.api.Project" name="project"/><parameter type="org.gradle.plugin.devel.GradlePluginDevelopmentExtension" name="extension"/></method><method name="call" returnType="java.lang.Object"/><method name="apply" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="configureTaskPropertiesValidation" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="configureJarTask" returnType="void"><parameter type="org.gradle.api.Project" name="project"/><parameter type="org.gradle.plugin.devel.GradlePluginDevelopmentExtension" name="extension"/></method><method name="execute" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="applyDependencies" returnType="void"><parameter type="org.gradle.api.Project" name="project"/></method><method name="call" returnType="java.util.List"/><method name="configureTestKit" returnType="void"><parameter type="org.gradle.api.Project" name="project"/><parameter type="org.gradle.plugin.devel.GradlePluginDevelopmentExtension" name="extension"/></method></type>