/* ============================================================================
 * Build file for project '#{egradle.template.projectname}'
 * ============================================================================
 * This file was initial generated by EGradle
 * using '#{egradle.template.name}' template
 * 
 * This is a very basic template suitable for gradle beginners and is nearly the
 * same as done by Gradle 'init' task. This generated file contains a sample 
 * Java project to get you started. In addition it will setup all necessary
 * eclipse parts also, so an out of the box import is possible.
 *
 * For more details about the java parts take a look at the Java Quickstart 
 * chapter in the Gradle user guide available at 
 * https://docs.gradle.org/current/userguide/tutorial_java_projects.html
 * ============================================================================
 */
 // Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}




/* ----------------------------------------------------------------------------
 *
 *  Additional parts from EGradle template for comfortable eclipse setup
 *  (necessary, because every EGradle template MUST be importable out of the box)
 * 
 * ---------------------------------------------------------------------------- */
// Apply the eclipse plugin to add support for Eclipse
apply plugin: 'eclipse'

// To have javadocs in eclipse added - where no sources are available - we need these lines:
// see https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html
eclipse {	 
  classpath {
	downloadSources = true // default: true
	downloadJavadoc = true // default: false
  }
} 

// first define an array containing source folders to be always available - even when not existing already
def eclipseSourceFolders=[
	'src/main/java',
	'src/main/resources',
	'src/test/java',
	'src/test/resources'
];
// now create those source folders when not existing, when eclipse task is executed:
tasks.eclipse.dependsOn << {
		
	for (String sourceFolder: eclipseSourceFolders){ 
		def resourceDir = new File(project.projectDir, sourceFolder)
		if( !resourceDir.exists() && ! resourceDir.mkdirs() ) {
    		logger.info("Not able to create %1",resourceDir);
    	}
	}
}